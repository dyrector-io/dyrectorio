name: web-crux-ui
on:
  push:
    paths:
      - web/crux-ui/**
      - .github/workflows/web-crux-ui.yml

permissions:
  contents: read
  pull-requests: read
  packages: read

env:
  # Environments
  REGISTRY: ghcr.io
  IMAGE_NAME: dyrector-io/dyrectorio/web/crux-ui
  WORKING_DIRECTORY: web/crux-ui
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  LOG_LEVEL: info
  KRATOS_URL: http://192.168.1.30:8000/kratos
  CRUX_ADDRESS: http://172.17.0.1:8000
  TIME_ZONE: Europe/Budapest
  #Â Default GitHub variables
  CRUX_UI_VERSION: ${{ github.sha }}
  CRUX_UI_IMAGE_TAG: ${{ github.ref_name }}

jobs:
  check:
    runs-on: ubuntu-20.04
    container:
      image: node:17.1-alpine
    outputs:
      tag: ${{ steps.settag.outputs.tag }}
      version: ${{ steps.settag.outputs.version }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        npm ci --arch=x64 --platform=linuxmusl --cache .npm --prefer-offline

    - name: Lint and Build
      run: |
        npm run lint
        npm run build
      env:
        NEXT_TELEMETRY_DISABLED: 1
        NODE_ENV: production
        NEXT_PUBLIC_RECAPTCHA_SITE_KEY: 6LeSBegfAAAAAGMnFacsTivlw4PdF2LBMi8g5tZ-

    - name: Setting a buildtag
      id: settag
      working-directory: .github/workflows
      run: ./pipeline_set_output_tag.sh $GITHUB_REF_TYPE ${{ github.ref_name }} ${{ github.sha }}

  # job: Build image
  build_image:
    runs-on: ubuntu-20.04
    needs: check
    container: docker:latest
    if: github.ref_name == 'develop' || github.ref_name == 'main' || github.ref_type == 'tag'
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    # if tag isn't the version set in package.json, job will fail
    - name: Check tag version correctness
      if: github.ref_type == 'tag'
      working-directory: .github/workflows
      run: ./check_version.sh ${{ needs.check.outputs.version }} ../../${{ env.WORKING_DIRECTORY }}

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Docker build 
      run: |
        docker build . -t ${REGISTRY}/${IMAGE_NAME}:${{ needs.check.outputs.tag }}
      env:
        NEXT_PUBLIC_RECAPTCHA_SITE_KEY: 6LeSBegfAAAAAGMnFacsTivlw4PdF2LBMi8g5tZ-
        CRUX_UI_IMAGE_TAG: ${{ needs.check.outputs.tag }}
        CRUX_VERSION: ${{ needs.check.outputs.version }}

    - name: Docker tag
      run: |
        docker tag ${REGISTRY}/${IMAGE_NAME}:${{ needs.check.outputs.tag }} ${REGISTRY}/${IMAGE_NAME}:${{ needs.check.outputs.version }}
      if: github.ref_type == 'tag'

    - name: Docker push
      run: |
        docker image push -a ${REGISTRY}/${IMAGE_NAME}

  sign_image:
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/dyrector-io/dyrectorio/alpine-proto:3.16
    needs: [build_image,check]
    environment: Workflow - Protected
    steps:
    - name: Write signing key to disk
      run: echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Sign container image
      run: |
        cosign sign --key cosign.key ${REGISTRY}/${IMAGE_NAME}:${{ needs.check.outputs.tag }}
      env:
        COSIGN_PASSWORD: "${{ secrets.COSIGN_PASSWORD }}"

    - name: Sign container image
      if: github.ref_type == 'tag'
      run: |
        cosign sign --key cosign.key ${REGISTRY}/${IMAGE_NAME}:${{ needs.check.outputs.version }}
      env:
        COSIGN_PASSWORD: "${{ secrets.COSIGN_PASSWORD }}"
