name: web-kratos
on:
  push:
    branches:
      - develop
      - main
    paths:
      - web/kratos/**
      - .github/workflows/web-kratos.yml
  pull_request:
    paths:
      - web/kratos/**
      - .github/workflows/web-kratos.yml

permissions:
  contents: read
  pull-requests: read
  packages: read

jobs:
  build_image:
    runs-on: ubuntu-22.04
    container: docker:latest
    if: github.ref_name == 'develop' || github.ref_name == 'main'
    defaults:
      run:
        working-directory: web/kratos
    outputs:
      tag: ${{ steps.settag.outputs.tag }}
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Setting a buildtag
      id: settag
      working-directory: .github/workflows
      run: |
        echo $GITHUB_REF_TYPE
        echo ${{ github.ref_name }}
        echo ${{ github.sha }}
        ./pipeline_set_output_tag.sh $GITHUB_REF_TYPE ${{ github.ref_name }} ${{ github.sha }}

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Docker build and push
      run: |
        docker build . -t ghcr.io/dyrector-io/dyrectorio/web/kratos:$IMAGE_TAG
        docker push ghcr.io/dyrector-io/dyrectorio/web/kratos:$IMAGE_TAG
      env:
        IMAGE_TAG: ${{ steps.settag.outputs.tag }}

  sign_image:
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/dyrector-io/dyrectorio/alpine-proto:3.16
    needs: build_image
    environment: Workflow - Protected
    steps:
    - name: Write signing key to disk
      run: echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Sign container image
      run: |
        cosign sign --key cosign.key ghcr.io/dyrector-io/dyrectorio/web/kratos:${{ needs.prerequirements.outputs.tag }}
      env:
        COSIGN_PASSWORD: "${{ secrets.COSIGN_PASSWORD }}"
