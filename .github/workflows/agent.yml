name: agent
on: 
  push:
    paths:
      - agent/**
      - .github/workflows/agent.yml

permissions:
  contents: read
  pull-requests: read
  packages: write


env:
  # Environments
  GOFLAGS: "-buildvcs=false"

jobs:

  select_version:
    runs-on: ubuntu-latest
    steps:
    - name: magic
      run: |
        if [ $GITHUB_REF_TYPE == "branch" ]; then
          case $GITHUB_REF in
            "main")
            echo "agent_tag=stable"
            ;;
            "develop")
            echo "agent_tag=latest"
            ;;
          esac
        fi
      
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/dyrector-io/dyrectorio/alpine-proto:3.16
    defaults:
      run:
        working-directory: agent
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Load go mod
      run: go mod tidy
    - name: Run golangci-lint
      run: pwd && make lint
  security:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/dyrector-io/dyrectorio/alpine-proto:3.16
    defaults:
      run:
        working-directory: agent
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Load go mod
      run: go mod tidy
    - name: Run gosec
      run: make security

  test:
    runs-on: ubuntu-latest
    needs: [security, lint]
    container:
      image: ghcr.io/dyrector-io/dyrectorio/alpine-proto:3.16
    defaults:
      run:
        working-directory: agent
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Load go mod
      run: go mod tidy
    - name: Run unit tests
      run: make test-unit
    # if we go public this is free from codecov.io
    # - uses: codecov/codecov-action@v3
    #   with:
    #     files: ./coverage.cov

  build:
    runs-on: ubuntu-latest
    needs: [test]
    container:
      image: ghcr.io/dyrector-io/dyrectorio/alpine-proto:3.16
    defaults:
      run:
        working-directory: agent
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3

      # fixes: fatal: unsafe repository 
      - name: Adding workspace
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Load go mod
        run: go mod tidy

      - name: Compile
        run: make compile-both

      - name: Docker build with latest tag
        if: github.ref == 'refs/heads/develop'
        run: make image_version=latest bbpb

      - name: Docker build with stable tag
        if: github.ref == 'refs/heads/main'
        run: make image_version=stable bbpb
        
  sign_image:
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/dyrector-io/dyrectorio/alpine-proto:3.16
    needs: build
    environment: Workflow - Protected
    steps:
    - name: Write signing key to disk
      run: echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Sign container image dagent
      run: | 
        cosign sign --key cosign.key ghcr.io/dyrector-io/dyrectorio/agent/dagent:${GITHUB_SHA::7}
      env:
        COSIGN_PASSWORD: "${{ secrets.COSIGN_PASSWORD }}"
    - name: Sign container image crane
      run: |
        cosign sign --key cosign.key ghcr.io/dyrector-io/dyrectorio/agent/crane:${GITHUB_SHA::7}
      env:
        COSIGN_PASSWORD: "${{ secrets.COSIGN_PASSWORD }}"
   