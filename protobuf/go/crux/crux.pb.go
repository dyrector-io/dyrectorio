//*
// CRUX Protobuf definitions
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: protobuf/proto/crux.proto

package crux

import (
	common "github.com/dyrector-io/dyrectorio/protobuf/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserRole int32

const (
	UserRole_UNKNOWN_USER_ROLE UserRole = 0
	UserRole_USER              UserRole = 1
	UserRole_OWNER             UserRole = 2
	UserRole_ADMIN             UserRole = 3
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "UNKNOWN_USER_ROLE",
		1: "USER",
		2: "OWNER",
		3: "ADMIN",
	}
	UserRole_value = map[string]int32{
		"UNKNOWN_USER_ROLE": 0,
		"USER":              1,
		"OWNER":             2,
		"ADMIN":             3,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[0].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[0]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{0}
}

type UserStatus int32

const (
	UserStatus_UNKNOWN_USER_STATUS UserStatus = 0
	UserStatus_PENDING             UserStatus = 1
	UserStatus_VERIFIED            UserStatus = 2
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "UNKNOWN_USER_STATUS",
		1: "PENDING",
		2: "VERIFIED",
	}
	UserStatus_value = map[string]int32{
		"UNKNOWN_USER_STATUS": 0,
		"PENDING":             1,
		"VERIFIED":            2,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[1].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[1]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{1}
}

// PRODUCT
type ProductType int32

const (
	ProductType_UNKNOWN_PRODUCT_TYPE ProductType = 0
	ProductType_SIMPLE               ProductType = 1
	ProductType_COMPLEX              ProductType = 2
)

// Enum value maps for ProductType.
var (
	ProductType_name = map[int32]string{
		0: "UNKNOWN_PRODUCT_TYPE",
		1: "SIMPLE",
		2: "COMPLEX",
	}
	ProductType_value = map[string]int32{
		"UNKNOWN_PRODUCT_TYPE": 0,
		"SIMPLE":               1,
		"COMPLEX":              2,
	}
)

func (x ProductType) Enum() *ProductType {
	p := new(ProductType)
	*p = x
	return p
}

func (x ProductType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[2].Descriptor()
}

func (ProductType) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[2]
}

func (x ProductType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductType.Descriptor instead.
func (ProductType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{2}
}

type VersionType int32

const (
	VersionType_UNKNOWN_VERSION_TYPE VersionType = 0
	VersionType_INCREMENTAL          VersionType = 1
	VersionType_ROLLING              VersionType = 2
)

// Enum value maps for VersionType.
var (
	VersionType_name = map[int32]string{
		0: "UNKNOWN_VERSION_TYPE",
		1: "INCREMENTAL",
		2: "ROLLING",
	}
	VersionType_value = map[string]int32{
		"UNKNOWN_VERSION_TYPE": 0,
		"INCREMENTAL":          1,
		"ROLLING":              2,
	}
)

func (x VersionType) Enum() *VersionType {
	p := new(VersionType)
	*p = x
	return p
}

func (x VersionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[3].Descriptor()
}

func (VersionType) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[3]
}

func (x VersionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionType.Descriptor instead.
func (VersionType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{3}
}

type RegistryType int32

const (
	RegistryType_UNKNOWN_REGISTRY_TYPE RegistryType = 0
	RegistryType_V2                    RegistryType = 1
	RegistryType_HUB                   RegistryType = 2
	RegistryType_GITLAB                RegistryType = 3
	RegistryType_GITHUB                RegistryType = 4
	RegistryType_GOOGLE                RegistryType = 5
)

// Enum value maps for RegistryType.
var (
	RegistryType_name = map[int32]string{
		0: "UNKNOWN_REGISTRY_TYPE",
		1: "V2",
		2: "HUB",
		3: "GITLAB",
		4: "GITHUB",
		5: "GOOGLE",
	}
	RegistryType_value = map[string]int32{
		"UNKNOWN_REGISTRY_TYPE": 0,
		"V2":                    1,
		"HUB":                   2,
		"GITLAB":                3,
		"GITHUB":                4,
		"GOOGLE":                5,
	}
)

func (x RegistryType) Enum() *RegistryType {
	p := new(RegistryType)
	*p = x
	return p
}

func (x RegistryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistryType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[4].Descriptor()
}

func (RegistryType) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[4]
}

func (x RegistryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistryType.Descriptor instead.
func (RegistryType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{4}
}

type RegistryNamespace int32

const (
	RegistryNamespace_UNKNOWN_REGISTRY_NAMESPACE RegistryNamespace = 0
	RegistryNamespace_RNS_ORGANIZATION           RegistryNamespace = 1
	RegistryNamespace_RNS_USER                   RegistryNamespace = 2
	RegistryNamespace_RNS_GROUP                  RegistryNamespace = 3
	RegistryNamespace_RNS_PROJECT                RegistryNamespace = 4
)

// Enum value maps for RegistryNamespace.
var (
	RegistryNamespace_name = map[int32]string{
		0: "UNKNOWN_REGISTRY_NAMESPACE",
		1: "RNS_ORGANIZATION",
		2: "RNS_USER",
		3: "RNS_GROUP",
		4: "RNS_PROJECT",
	}
	RegistryNamespace_value = map[string]int32{
		"UNKNOWN_REGISTRY_NAMESPACE": 0,
		"RNS_ORGANIZATION":           1,
		"RNS_USER":                   2,
		"RNS_GROUP":                  3,
		"RNS_PROJECT":                4,
	}
)

func (x RegistryNamespace) Enum() *RegistryNamespace {
	p := new(RegistryNamespace)
	*p = x
	return p
}

func (x RegistryNamespace) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistryNamespace) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[5].Descriptor()
}

func (RegistryNamespace) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[5]
}

func (x RegistryNamespace) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistryNamespace.Descriptor instead.
func (RegistryNamespace) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{5}
}

//
//Lifecycle:
//When a node connection is alive, the status is CONNECTED.
//If it disconnects, the status will be UNREACHABLE.
//When a node created, it is UNREACHEABLE until the user completes
//the install process.
type NodeConnectionStatus int32

const (
	NodeConnectionStatus_UNKNOWN_CONNECTION_STATUS NodeConnectionStatus = 0
	// Node was not yet connected or became unreachable
	NodeConnectionStatus_UNREACHABLE NodeConnectionStatus = 1
	// Node is running and connected
	NodeConnectionStatus_CONNECTED NodeConnectionStatus = 2
)

// Enum value maps for NodeConnectionStatus.
var (
	NodeConnectionStatus_name = map[int32]string{
		0: "UNKNOWN_CONNECTION_STATUS",
		1: "UNREACHABLE",
		2: "CONNECTED",
	}
	NodeConnectionStatus_value = map[string]int32{
		"UNKNOWN_CONNECTION_STATUS": 0,
		"UNREACHABLE":               1,
		"CONNECTED":                 2,
	}
)

func (x NodeConnectionStatus) Enum() *NodeConnectionStatus {
	p := new(NodeConnectionStatus)
	*p = x
	return p
}

func (x NodeConnectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeConnectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[6].Descriptor()
}

func (NodeConnectionStatus) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[6]
}

func (x NodeConnectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeConnectionStatus.Descriptor instead.
func (NodeConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{6}
}

type NodeType int32

const (
	NodeType_UNKNOWN_NODE_TYPE NodeType = 0
	NodeType_DOCKER            NodeType = 1
	NodeType_K8S               NodeType = 2
)

// Enum value maps for NodeType.
var (
	NodeType_name = map[int32]string{
		0: "UNKNOWN_NODE_TYPE",
		1: "DOCKER",
		2: "K8S",
	}
	NodeType_value = map[string]int32{
		"UNKNOWN_NODE_TYPE": 0,
		"DOCKER":            1,
		"K8S":               2,
	}
)

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[7].Descriptor()
}

func (NodeType) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[7]
}

func (x NodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeType.Descriptor instead.
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{7}
}

type DeploymentEventType int32

const (
	DeploymentEventType_UNKNOWN_DEPLOYMENT_EVENT_TYPE DeploymentEventType = 0
	DeploymentEventType_DEPLOYMENT_LOG                DeploymentEventType = 1
	DeploymentEventType_DEPLOYMENT_STATUS             DeploymentEventType = 2
	DeploymentEventType_CONTAINER_STATUS              DeploymentEventType = 3
)

// Enum value maps for DeploymentEventType.
var (
	DeploymentEventType_name = map[int32]string{
		0: "UNKNOWN_DEPLOYMENT_EVENT_TYPE",
		1: "DEPLOYMENT_LOG",
		2: "DEPLOYMENT_STATUS",
		3: "CONTAINER_STATUS",
	}
	DeploymentEventType_value = map[string]int32{
		"UNKNOWN_DEPLOYMENT_EVENT_TYPE": 0,
		"DEPLOYMENT_LOG":                1,
		"DEPLOYMENT_STATUS":             2,
		"CONTAINER_STATUS":              3,
	}
)

func (x DeploymentEventType) Enum() *DeploymentEventType {
	p := new(DeploymentEventType)
	*p = x
	return p
}

func (x DeploymentEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploymentEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[8].Descriptor()
}

func (DeploymentEventType) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[8]
}

func (x DeploymentEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploymentEventType.Descriptor instead.
func (DeploymentEventType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{8}
}

type NotificationType int32

const (
	NotificationType_UNKNOWN_NOTIFICATION_TYPE NotificationType = 0
	NotificationType_DISCORD                   NotificationType = 1
	NotificationType_SLACK                     NotificationType = 2
	NotificationType_TEAMS                     NotificationType = 3
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "UNKNOWN_NOTIFICATION_TYPE",
		1: "DISCORD",
		2: "SLACK",
		3: "TEAMS",
	}
	NotificationType_value = map[string]int32{
		"UNKNOWN_NOTIFICATION_TYPE": 0,
		"DISCORD":                   1,
		"SLACK":                     2,
		"TEAMS":                     3,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[9].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[9]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{9}
}

type NotificationEventType int32

const (
	NotificationEventType_UNKNOWN_NOTIFICATION_EVENT_TYPE NotificationEventType = 0
	NotificationEventType_DEPLOYMENT_CREATED              NotificationEventType = 1
	NotificationEventType_VERSION_CREATED                 NotificationEventType = 2
	NotificationEventType_NODE_ADDED                      NotificationEventType = 3
	NotificationEventType_USER_INVITED                    NotificationEventType = 4
)

// Enum value maps for NotificationEventType.
var (
	NotificationEventType_name = map[int32]string{
		0: "UNKNOWN_NOTIFICATION_EVENT_TYPE",
		1: "DEPLOYMENT_CREATED",
		2: "VERSION_CREATED",
		3: "NODE_ADDED",
		4: "USER_INVITED",
	}
	NotificationEventType_value = map[string]int32{
		"UNKNOWN_NOTIFICATION_EVENT_TYPE": 0,
		"DEPLOYMENT_CREATED":              1,
		"VERSION_CREATED":                 2,
		"NODE_ADDED":                      3,
		"USER_INVITED":                    4,
	}
)

func (x NotificationEventType) Enum() *NotificationEventType {
	p := new(NotificationEventType)
	*p = x
	return p
}

func (x NotificationEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[10].Descriptor()
}

func (NotificationEventType) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[10]
}

func (x NotificationEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationEventType.Descriptor instead.
func (NotificationEventType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{10}
}

type ServiceStatus int32

const (
	ServiceStatus_UNKNOWN_SERVICE_STATUS ServiceStatus = 0
	ServiceStatus_UNAVAILABLE            ServiceStatus = 1
	ServiceStatus_DISRUPTED              ServiceStatus = 2
	ServiceStatus_OPERATIONAL            ServiceStatus = 3
)

// Enum value maps for ServiceStatus.
var (
	ServiceStatus_name = map[int32]string{
		0: "UNKNOWN_SERVICE_STATUS",
		1: "UNAVAILABLE",
		2: "DISRUPTED",
		3: "OPERATIONAL",
	}
	ServiceStatus_value = map[string]int32{
		"UNKNOWN_SERVICE_STATUS": 0,
		"UNAVAILABLE":            1,
		"DISRUPTED":              2,
		"OPERATIONAL":            3,
	}
)

func (x ServiceStatus) Enum() *ServiceStatus {
	p := new(ServiceStatus)
	*p = x
	return p
}

func (x ServiceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_proto_crux_proto_enumTypes[11].Descriptor()
}

func (ServiceStatus) Type() protoreflect.EnumType {
	return &file_protobuf_proto_crux_proto_enumTypes[11]
}

func (x ServiceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceStatus.Descriptor instead.
func (ServiceStatus) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{11}
}

//*
//
// Common messages
//
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{0}
}

type ServiceIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ServiceIdRequest) Reset() {
	*x = ServiceIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceIdRequest) ProtoMessage() {}

func (x *ServiceIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceIdRequest.ProtoReflect.Descriptor instead.
func (*ServiceIdRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type IdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
}

func (x *IdRequest) Reset() {
	*x = IdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdRequest) ProtoMessage() {}

func (x *IdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdRequest.ProtoReflect.Descriptor instead.
func (*IdRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{2}
}

func (x *IdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IdRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

type AuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedBy string                 `protobuf:"bytes,100,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedBy *string                `protobuf:"bytes,102,opt,name=updatedBy,proto3,oneof" json:"updatedBy,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=updatedAt,proto3,oneof" json:"updatedAt,omitempty"`
}

func (x *AuditResponse) Reset() {
	*x = AuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditResponse) ProtoMessage() {}

func (x *AuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditResponse.ProtoReflect.Descriptor instead.
func (*AuditResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{3}
}

func (x *AuditResponse) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *AuditResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AuditResponse) GetUpdatedBy() string {
	if x != nil && x.UpdatedBy != nil {
		return *x.UpdatedBy
	}
	return ""
}

func (x *AuditResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *CreateEntityResponse) Reset() {
	*x = CreateEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntityResponse) ProtoMessage() {}

func (x *CreateEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntityResponse.ProtoReflect.Descriptor instead.
func (*CreateEntityResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{4}
}

func (x *CreateEntityResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateEntityResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type UpdateEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *UpdateEntityResponse) Reset() {
	*x = UpdateEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntityResponse) ProtoMessage() {}

func (x *UpdateEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntityResponse.ProtoReflect.Descriptor instead.
func (*UpdateEntityResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateEntityResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// AUDIT
type AuditLogListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy  string                 `protobuf:"bytes,100,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	PageSize    uint32                 `protobuf:"varint,101,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber  uint32                 `protobuf:"varint,102,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	Keyword     *string                `protobuf:"bytes,103,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	CreatedFrom *timestamppb.Timestamp `protobuf:"bytes,104,opt,name=createdFrom,proto3,oneof" json:"createdFrom,omitempty"`
	CreatedTo   *timestamppb.Timestamp `protobuf:"bytes,105,opt,name=createdTo,proto3" json:"createdTo,omitempty"`
}

func (x *AuditLogListRequest) Reset() {
	*x = AuditLogListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogListRequest) ProtoMessage() {}

func (x *AuditLogListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogListRequest.ProtoReflect.Descriptor instead.
func (*AuditLogListRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{6}
}

func (x *AuditLogListRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *AuditLogListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AuditLogListRequest) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *AuditLogListRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *AuditLogListRequest) GetCreatedFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedFrom
	}
	return nil
}

func (x *AuditLogListRequest) GetCreatedTo() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTo
	}
	return nil
}

type AuditLogListCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32 `protobuf:"varint,100,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AuditLogListCountResponse) Reset() {
	*x = AuditLogListCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogListCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogListCountResponse) ProtoMessage() {}

func (x *AuditLogListCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogListCountResponse.ProtoReflect.Descriptor instead.
func (*AuditLogListCountResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{7}
}

func (x *AuditLogListCountResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AuditLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UserId        string                 `protobuf:"bytes,101,opt,name=userId,proto3" json:"userId,omitempty"`
	IdentityEmail string                 `protobuf:"bytes,102,opt,name=identityEmail,proto3" json:"identityEmail,omitempty"`
	ServiceCall   string                 `protobuf:"bytes,103,opt,name=serviceCall,proto3" json:"serviceCall,omitempty"`
	Data          *string                `protobuf:"bytes,104,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *AuditLogResponse) Reset() {
	*x = AuditLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogResponse) ProtoMessage() {}

func (x *AuditLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogResponse.ProtoReflect.Descriptor instead.
func (*AuditLogResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{8}
}

func (x *AuditLogResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AuditLogResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuditLogResponse) GetIdentityEmail() string {
	if x != nil {
		return x.IdentityEmail
	}
	return ""
}

func (x *AuditLogResponse) GetServiceCall() string {
	if x != nil {
		return x.ServiceCall
	}
	return ""
}

func (x *AuditLogResponse) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type AuditLogListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AuditLogResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AuditLogListResponse) Reset() {
	*x = AuditLogListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogListResponse) ProtoMessage() {}

func (x *AuditLogListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogListResponse.ProtoReflect.Descriptor instead.
func (*AuditLogListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{9}
}

func (x *AuditLogListResponse) GetData() []*AuditLogResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

// TEAM
type CreateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy string `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name       string `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTeamRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *CreateTeamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name       string `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateTeamRequest) Reset() {
	*x = UpdateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamRequest) ProtoMessage() {}

func (x *UpdateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTeamRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTeamRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *UpdateTeamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateUserRoleInTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string   `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	UserId     string   `protobuf:"bytes,100,opt,name=userId,proto3" json:"userId,omitempty"`
	Role       UserRole `protobuf:"varint,101,opt,name=role,proto3,enum=crux.UserRole" json:"role,omitempty"`
}

func (x *UpdateUserRoleInTeamRequest) Reset() {
	*x = UpdateUserRoleInTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleInTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleInTeamRequest) ProtoMessage() {}

func (x *UpdateUserRoleInTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleInTeamRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleInTeamRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateUserRoleInTeamRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUserRoleInTeamRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *UpdateUserRoleInTeamRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRoleInTeamRequest) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_UNKNOWN_USER_ROLE
}

type InviteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Email      string `protobuf:"bytes,100,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *InviteUserRequest) Reset() {
	*x = InviteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserRequest) ProtoMessage() {}

func (x *InviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserRequest.ProtoReflect.Descriptor instead.
func (*InviteUserRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{13}
}

func (x *InviteUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InviteUserRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *InviteUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type DeleteUserFromTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	UserId     string `protobuf:"bytes,100,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DeleteUserFromTeamRequest) Reset() {
	*x = DeleteUserFromTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserFromTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserFromTeamRequest) ProtoMessage() {}

func (x *DeleteUserFromTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserFromTeamRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserFromTeamRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteUserFromTeamRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteUserFromTeamRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *DeleteUserFromTeamRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy string `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
}

func (x *AccessRequest) Reset() {
	*x = AccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRequest) ProtoMessage() {}

func (x *AccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRequest.ProtoReflect.Descriptor instead.
func (*AccessRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{15}
}

func (x *AccessRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

type UserMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        *ActiveTeamUser `protobuf:"bytes,100,opt,name=user,proto3" json:"user,omitempty"`
	Teams       []*TeamResponse `protobuf:"bytes,1000,rep,name=teams,proto3" json:"teams,omitempty"`
	Invitations []*TeamResponse `protobuf:"bytes,1001,rep,name=invitations,proto3" json:"invitations,omitempty"`
}

func (x *UserMetaResponse) Reset() {
	*x = UserMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMetaResponse) ProtoMessage() {}

func (x *UserMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMetaResponse.ProtoReflect.Descriptor instead.
func (*UserMetaResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{16}
}

func (x *UserMetaResponse) GetUser() *ActiveTeamUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserMetaResponse) GetTeams() []*TeamResponse {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *UserMetaResponse) GetInvitations() []*TeamResponse {
	if x != nil {
		return x.Invitations
	}
	return nil
}

type ActiveTeamUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveTeamId string     `protobuf:"bytes,100,opt,name=activeTeamId,proto3" json:"activeTeamId,omitempty"`
	Role         UserRole   `protobuf:"varint,101,opt,name=role,proto3,enum=crux.UserRole" json:"role,omitempty"`
	Status       UserStatus `protobuf:"varint,102,opt,name=status,proto3,enum=crux.UserStatus" json:"status,omitempty"`
}

func (x *ActiveTeamUser) Reset() {
	*x = ActiveTeamUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveTeamUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveTeamUser) ProtoMessage() {}

func (x *ActiveTeamUser) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveTeamUser.ProtoReflect.Descriptor instead.
func (*ActiveTeamUser) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{17}
}

func (x *ActiveTeamUser) GetActiveTeamId() string {
	if x != nil {
		return x.ActiveTeamId
	}
	return ""
}

func (x *ActiveTeamUser) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_UNKNOWN_USER_ROLE
}

func (x *ActiveTeamUser) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

type TeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TeamResponse) Reset() {
	*x = TeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamResponse) ProtoMessage() {}

func (x *TeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamResponse.ProtoReflect.Descriptor instead.
func (*TeamResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{18}
}

func (x *TeamResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ActiveTeamDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string          `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Users []*UserResponse `protobuf:"bytes,1000,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ActiveTeamDetailsResponse) Reset() {
	*x = ActiveTeamDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveTeamDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveTeamDetailsResponse) ProtoMessage() {}

func (x *ActiveTeamDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveTeamDetailsResponse.ProtoReflect.Descriptor instead.
func (*ActiveTeamDetailsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{19}
}

func (x *ActiveTeamDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActiveTeamDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActiveTeamDetailsResponse) GetUsers() []*UserResponse {
	if x != nil {
		return x.Users
	}
	return nil
}

type TeamStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users       uint32 `protobuf:"varint,100,opt,name=users,proto3" json:"users,omitempty"`
	Products    uint32 `protobuf:"varint,101,opt,name=products,proto3" json:"products,omitempty"`
	Nodes       uint32 `protobuf:"varint,102,opt,name=nodes,proto3" json:"nodes,omitempty"`
	Versions    uint32 `protobuf:"varint,103,opt,name=versions,proto3" json:"versions,omitempty"`
	Deployments uint32 `protobuf:"varint,104,opt,name=deployments,proto3" json:"deployments,omitempty"`
}

func (x *TeamStatistics) Reset() {
	*x = TeamStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamStatistics) ProtoMessage() {}

func (x *TeamStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamStatistics.ProtoReflect.Descriptor instead.
func (*TeamStatistics) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{20}
}

func (x *TeamStatistics) GetUsers() uint32 {
	if x != nil {
		return x.Users
	}
	return 0
}

func (x *TeamStatistics) GetProducts() uint32 {
	if x != nil {
		return x.Products
	}
	return 0
}

func (x *TeamStatistics) GetNodes() uint32 {
	if x != nil {
		return x.Nodes
	}
	return 0
}

func (x *TeamStatistics) GetVersions() uint32 {
	if x != nil {
		return x.Versions
	}
	return 0
}

func (x *TeamStatistics) GetDeployments() uint32 {
	if x != nil {
		return x.Deployments
	}
	return 0
}

type TeamWithStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string          `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Statistics *TeamStatistics `protobuf:"bytes,101,opt,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *TeamWithStatsResponse) Reset() {
	*x = TeamWithStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamWithStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamWithStatsResponse) ProtoMessage() {}

func (x *TeamWithStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamWithStatsResponse.ProtoReflect.Descriptor instead.
func (*TeamWithStatsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{21}
}

func (x *TeamWithStatsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamWithStatsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamWithStatsResponse) GetStatistics() *TeamStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type TeamDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string          `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Statistics *TeamStatistics `protobuf:"bytes,101,opt,name=statistics,proto3" json:"statistics,omitempty"`
	Users      []*UserResponse `protobuf:"bytes,1000,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *TeamDetailsResponse) Reset() {
	*x = TeamDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamDetailsResponse) ProtoMessage() {}

func (x *TeamDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamDetailsResponse.ProtoReflect.Descriptor instead.
func (*TeamDetailsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{22}
}

func (x *TeamDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamDetailsResponse) GetStatistics() *TeamStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *TeamDetailsResponse) GetUsers() []*UserResponse {
	if x != nil {
		return x.Users
	}
	return nil
}

type AllTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*TeamWithStatsResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AllTeamsResponse) Reset() {
	*x = AllTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTeamsResponse) ProtoMessage() {}

func (x *AllTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTeamsResponse.ProtoReflect.Descriptor instead.
func (*AllTeamsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{23}
}

func (x *AllTeamsResponse) GetData() []*TeamWithStatsResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Email     string                 `protobuf:"bytes,101,opt,name=email,proto3" json:"email,omitempty"`
	Role      UserRole               `protobuf:"varint,102,opt,name=role,proto3,enum=crux.UserRole" json:"role,omitempty"`
	Status    UserStatus             `protobuf:"varint,103,opt,name=status,proto3,enum=crux.UserStatus" json:"status,omitempty"`
	LastLogin *timestamppb.Timestamp `protobuf:"bytes,104,opt,name=lastLogin,proto3,oneof" json:"lastLogin,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{24}
}

func (x *UserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserResponse) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_UNKNOWN_USER_ROLE
}

func (x *UserResponse) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

func (x *UserResponse) GetLastLogin() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLogin
	}
	return nil
}

type ProductDetailsReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit       *AuditResponse     `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name        string             `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string            `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Type        ProductType        `protobuf:"varint,102,opt,name=type,proto3,enum=crux.ProductType" json:"type,omitempty"`
	Versions    []*VersionResponse `protobuf:"bytes,1000,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ProductDetailsReponse) Reset() {
	*x = ProductDetailsReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetailsReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetailsReponse) ProtoMessage() {}

func (x *ProductDetailsReponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetailsReponse.ProtoReflect.Descriptor instead.
func (*ProductDetailsReponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{25}
}

func (x *ProductDetailsReponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductDetailsReponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *ProductDetailsReponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductDetailsReponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProductDetailsReponse) GetType() ProductType {
	if x != nil {
		return x.Type
	}
	return ProductType_UNKNOWN_PRODUCT_TYPE
}

func (x *ProductDetailsReponse) GetVersions() []*VersionResponse {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ProductReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit        *AuditResponse `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name         string         `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description  *string        `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Type         ProductType    `protobuf:"varint,102,opt,name=type,proto3,enum=crux.ProductType" json:"type,omitempty"`
	VersionCount uint32         `protobuf:"varint,103,opt,name=versionCount,proto3" json:"versionCount,omitempty"`
}

func (x *ProductReponse) Reset() {
	*x = ProductReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductReponse) ProtoMessage() {}

func (x *ProductReponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductReponse.ProtoReflect.Descriptor instead.
func (*ProductReponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{26}
}

func (x *ProductReponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductReponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *ProductReponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductReponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProductReponse) GetType() ProductType {
	if x != nil {
		return x.Type
	}
	return ProductType_UNKNOWN_PRODUCT_TYPE
}

func (x *ProductReponse) GetVersionCount() uint32 {
	if x != nil {
		return x.VersionCount
	}
	return 0
}

type ProductListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ProductReponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductListResponse) Reset() {
	*x = ProductListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListResponse) ProtoMessage() {}

func (x *ProductListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListResponse.ProtoReflect.Descriptor instead.
func (*ProductListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{27}
}

func (x *ProductListResponse) GetData() []*ProductReponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy  string      `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name        string      `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string     `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Type        ProductType `protobuf:"varint,102,opt,name=type,proto3,enum=crux.ProductType" json:"type,omitempty"`
}

func (x *CreateProductRequest) Reset() {
	*x = CreateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductRequest) ProtoMessage() {}

func (x *CreateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductRequest.ProtoReflect.Descriptor instead.
func (*CreateProductRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{28}
}

func (x *CreateProductRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *CreateProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProductRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateProductRequest) GetType() ProductType {
	if x != nil {
		return x.Type
	}
	return ProductType_UNKNOWN_PRODUCT_TYPE
}

type UpdateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy  string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name        string  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Changelog   *string `protobuf:"bytes,102,opt,name=changelog,proto3,oneof" json:"changelog,omitempty"`
}

func (x *UpdateProductRequest) Reset() {
	*x = UpdateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductRequest) ProtoMessage() {}

func (x *UpdateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateProductRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProductRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *UpdateProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProductRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateProductRequest) GetChangelog() string {
	if x != nil && x.Changelog != nil {
		return *x.Changelog
	}
	return ""
}

type RegistryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit       *AuditResponse `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name        string         `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string        `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Icon        *string        `protobuf:"bytes,102,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Url         string         `protobuf:"bytes,103,opt,name=url,proto3" json:"url,omitempty"`
	Type        RegistryType   `protobuf:"varint,104,opt,name=type,proto3,enum=crux.RegistryType" json:"type,omitempty"`
}

func (x *RegistryResponse) Reset() {
	*x = RegistryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryResponse) ProtoMessage() {}

func (x *RegistryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryResponse.ProtoReflect.Descriptor instead.
func (*RegistryResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{30}
}

func (x *RegistryResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegistryResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *RegistryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegistryResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *RegistryResponse) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *RegistryResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RegistryResponse) GetType() RegistryType {
	if x != nil {
		return x.Type
	}
	return RegistryType_UNKNOWN_REGISTRY_TYPE
}

type RegistryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*RegistryResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RegistryListResponse) Reset() {
	*x = RegistryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryListResponse) ProtoMessage() {}

func (x *RegistryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryListResponse.ProtoReflect.Descriptor instead.
func (*RegistryListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{31}
}

func (x *RegistryListResponse) GetData() []*RegistryResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type HubRegistryDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageNamePrefix string `protobuf:"bytes,100,opt,name=imageNamePrefix,proto3" json:"imageNamePrefix,omitempty"`
}

func (x *HubRegistryDetails) Reset() {
	*x = HubRegistryDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HubRegistryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HubRegistryDetails) ProtoMessage() {}

func (x *HubRegistryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HubRegistryDetails.ProtoReflect.Descriptor instead.
func (*HubRegistryDetails) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{32}
}

func (x *HubRegistryDetails) GetImageNamePrefix() string {
	if x != nil {
		return x.ImageNamePrefix
	}
	return ""
}

type V2RegistryDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url   string  `protobuf:"bytes,100,opt,name=url,proto3" json:"url,omitempty"`
	User  *string `protobuf:"bytes,101,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Token *string `protobuf:"bytes,102,opt,name=token,proto3,oneof" json:"token,omitempty"`
}

func (x *V2RegistryDetails) Reset() {
	*x = V2RegistryDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V2RegistryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V2RegistryDetails) ProtoMessage() {}

func (x *V2RegistryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V2RegistryDetails.ProtoReflect.Descriptor instead.
func (*V2RegistryDetails) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{33}
}

func (x *V2RegistryDetails) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *V2RegistryDetails) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *V2RegistryDetails) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type GitlabRegistryDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            string            `protobuf:"bytes,100,opt,name=user,proto3" json:"user,omitempty"`
	Token           string            `protobuf:"bytes,101,opt,name=token,proto3" json:"token,omitempty"`
	ImageNamePrefix string            `protobuf:"bytes,102,opt,name=imageNamePrefix,proto3" json:"imageNamePrefix,omitempty"`
	Url             *string           `protobuf:"bytes,103,opt,name=url,proto3,oneof" json:"url,omitempty"`
	ApiUrl          *string           `protobuf:"bytes,104,opt,name=apiUrl,proto3,oneof" json:"apiUrl,omitempty"`
	Namespace       RegistryNamespace `protobuf:"varint,105,opt,name=namespace,proto3,enum=crux.RegistryNamespace" json:"namespace,omitempty"`
}

func (x *GitlabRegistryDetails) Reset() {
	*x = GitlabRegistryDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitlabRegistryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitlabRegistryDetails) ProtoMessage() {}

func (x *GitlabRegistryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitlabRegistryDetails.ProtoReflect.Descriptor instead.
func (*GitlabRegistryDetails) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{34}
}

func (x *GitlabRegistryDetails) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *GitlabRegistryDetails) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GitlabRegistryDetails) GetImageNamePrefix() string {
	if x != nil {
		return x.ImageNamePrefix
	}
	return ""
}

func (x *GitlabRegistryDetails) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *GitlabRegistryDetails) GetApiUrl() string {
	if x != nil && x.ApiUrl != nil {
		return *x.ApiUrl
	}
	return ""
}

func (x *GitlabRegistryDetails) GetNamespace() RegistryNamespace {
	if x != nil {
		return x.Namespace
	}
	return RegistryNamespace_UNKNOWN_REGISTRY_NAMESPACE
}

type GithubRegistryDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            string            `protobuf:"bytes,100,opt,name=user,proto3" json:"user,omitempty"`
	Token           string            `protobuf:"bytes,101,opt,name=token,proto3" json:"token,omitempty"`
	ImageNamePrefix string            `protobuf:"bytes,102,opt,name=imageNamePrefix,proto3" json:"imageNamePrefix,omitempty"`
	Namespace       RegistryNamespace `protobuf:"varint,103,opt,name=namespace,proto3,enum=crux.RegistryNamespace" json:"namespace,omitempty"`
}

func (x *GithubRegistryDetails) Reset() {
	*x = GithubRegistryDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubRegistryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubRegistryDetails) ProtoMessage() {}

func (x *GithubRegistryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubRegistryDetails.ProtoReflect.Descriptor instead.
func (*GithubRegistryDetails) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{35}
}

func (x *GithubRegistryDetails) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *GithubRegistryDetails) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GithubRegistryDetails) GetImageNamePrefix() string {
	if x != nil {
		return x.ImageNamePrefix
	}
	return ""
}

func (x *GithubRegistryDetails) GetNamespace() RegistryNamespace {
	if x != nil {
		return x.Namespace
	}
	return RegistryNamespace_UNKNOWN_REGISTRY_NAMESPACE
}

type GoogleRegistryDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url             string  `protobuf:"bytes,100,opt,name=url,proto3" json:"url,omitempty"`
	User            *string `protobuf:"bytes,101,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Token           *string `protobuf:"bytes,102,opt,name=token,proto3,oneof" json:"token,omitempty"`
	ImageNamePrefix string  `protobuf:"bytes,103,opt,name=imageNamePrefix,proto3" json:"imageNamePrefix,omitempty"`
}

func (x *GoogleRegistryDetails) Reset() {
	*x = GoogleRegistryDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleRegistryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleRegistryDetails) ProtoMessage() {}

func (x *GoogleRegistryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleRegistryDetails.ProtoReflect.Descriptor instead.
func (*GoogleRegistryDetails) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{36}
}

func (x *GoogleRegistryDetails) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GoogleRegistryDetails) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *GoogleRegistryDetails) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *GoogleRegistryDetails) GetImageNamePrefix() string {
	if x != nil {
		return x.ImageNamePrefix
	}
	return ""
}

type CreateRegistryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy  string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name        string  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Icon        *string `protobuf:"bytes,102,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	// Types that are assignable to Details:
	//	*CreateRegistryRequest_Hub
	//	*CreateRegistryRequest_V2
	//	*CreateRegistryRequest_Gitlab
	//	*CreateRegistryRequest_Github
	//	*CreateRegistryRequest_Google
	Details isCreateRegistryRequest_Details `protobuf_oneof:"details"`
}

func (x *CreateRegistryRequest) Reset() {
	*x = CreateRegistryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRegistryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegistryRequest) ProtoMessage() {}

func (x *CreateRegistryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegistryRequest.ProtoReflect.Descriptor instead.
func (*CreateRegistryRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{37}
}

func (x *CreateRegistryRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *CreateRegistryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRegistryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateRegistryRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (m *CreateRegistryRequest) GetDetails() isCreateRegistryRequest_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *CreateRegistryRequest) GetHub() *HubRegistryDetails {
	if x, ok := x.GetDetails().(*CreateRegistryRequest_Hub); ok {
		return x.Hub
	}
	return nil
}

func (x *CreateRegistryRequest) GetV2() *V2RegistryDetails {
	if x, ok := x.GetDetails().(*CreateRegistryRequest_V2); ok {
		return x.V2
	}
	return nil
}

func (x *CreateRegistryRequest) GetGitlab() *GitlabRegistryDetails {
	if x, ok := x.GetDetails().(*CreateRegistryRequest_Gitlab); ok {
		return x.Gitlab
	}
	return nil
}

func (x *CreateRegistryRequest) GetGithub() *GithubRegistryDetails {
	if x, ok := x.GetDetails().(*CreateRegistryRequest_Github); ok {
		return x.Github
	}
	return nil
}

func (x *CreateRegistryRequest) GetGoogle() *GoogleRegistryDetails {
	if x, ok := x.GetDetails().(*CreateRegistryRequest_Google); ok {
		return x.Google
	}
	return nil
}

type isCreateRegistryRequest_Details interface {
	isCreateRegistryRequest_Details()
}

type CreateRegistryRequest_Hub struct {
	Hub *HubRegistryDetails `protobuf:"bytes,200,opt,name=hub,proto3,oneof"`
}

type CreateRegistryRequest_V2 struct {
	V2 *V2RegistryDetails `protobuf:"bytes,201,opt,name=v2,proto3,oneof"`
}

type CreateRegistryRequest_Gitlab struct {
	Gitlab *GitlabRegistryDetails `protobuf:"bytes,202,opt,name=gitlab,proto3,oneof"`
}

type CreateRegistryRequest_Github struct {
	Github *GithubRegistryDetails `protobuf:"bytes,203,opt,name=github,proto3,oneof"`
}

type CreateRegistryRequest_Google struct {
	Google *GoogleRegistryDetails `protobuf:"bytes,204,opt,name=google,proto3,oneof"`
}

func (*CreateRegistryRequest_Hub) isCreateRegistryRequest_Details() {}

func (*CreateRegistryRequest_V2) isCreateRegistryRequest_Details() {}

func (*CreateRegistryRequest_Gitlab) isCreateRegistryRequest_Details() {}

func (*CreateRegistryRequest_Github) isCreateRegistryRequest_Details() {}

func (*CreateRegistryRequest_Google) isCreateRegistryRequest_Details() {}

type UpdateRegistryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy  string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name        string  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Icon        *string `protobuf:"bytes,102,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	// Types that are assignable to Details:
	//	*UpdateRegistryRequest_Hub
	//	*UpdateRegistryRequest_V2
	//	*UpdateRegistryRequest_Gitlab
	//	*UpdateRegistryRequest_Github
	//	*UpdateRegistryRequest_Google
	Details isUpdateRegistryRequest_Details `protobuf_oneof:"details"`
}

func (x *UpdateRegistryRequest) Reset() {
	*x = UpdateRegistryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegistryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegistryRequest) ProtoMessage() {}

func (x *UpdateRegistryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegistryRequest.ProtoReflect.Descriptor instead.
func (*UpdateRegistryRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateRegistryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRegistryRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *UpdateRegistryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRegistryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateRegistryRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (m *UpdateRegistryRequest) GetDetails() isUpdateRegistryRequest_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *UpdateRegistryRequest) GetHub() *HubRegistryDetails {
	if x, ok := x.GetDetails().(*UpdateRegistryRequest_Hub); ok {
		return x.Hub
	}
	return nil
}

func (x *UpdateRegistryRequest) GetV2() *V2RegistryDetails {
	if x, ok := x.GetDetails().(*UpdateRegistryRequest_V2); ok {
		return x.V2
	}
	return nil
}

func (x *UpdateRegistryRequest) GetGitlab() *GitlabRegistryDetails {
	if x, ok := x.GetDetails().(*UpdateRegistryRequest_Gitlab); ok {
		return x.Gitlab
	}
	return nil
}

func (x *UpdateRegistryRequest) GetGithub() *GithubRegistryDetails {
	if x, ok := x.GetDetails().(*UpdateRegistryRequest_Github); ok {
		return x.Github
	}
	return nil
}

func (x *UpdateRegistryRequest) GetGoogle() *GoogleRegistryDetails {
	if x, ok := x.GetDetails().(*UpdateRegistryRequest_Google); ok {
		return x.Google
	}
	return nil
}

type isUpdateRegistryRequest_Details interface {
	isUpdateRegistryRequest_Details()
}

type UpdateRegistryRequest_Hub struct {
	Hub *HubRegistryDetails `protobuf:"bytes,200,opt,name=hub,proto3,oneof"`
}

type UpdateRegistryRequest_V2 struct {
	V2 *V2RegistryDetails `protobuf:"bytes,201,opt,name=v2,proto3,oneof"`
}

type UpdateRegistryRequest_Gitlab struct {
	Gitlab *GitlabRegistryDetails `protobuf:"bytes,202,opt,name=gitlab,proto3,oneof"`
}

type UpdateRegistryRequest_Github struct {
	Github *GithubRegistryDetails `protobuf:"bytes,203,opt,name=github,proto3,oneof"`
}

type UpdateRegistryRequest_Google struct {
	Google *GoogleRegistryDetails `protobuf:"bytes,204,opt,name=google,proto3,oneof"`
}

func (*UpdateRegistryRequest_Hub) isUpdateRegistryRequest_Details() {}

func (*UpdateRegistryRequest_V2) isUpdateRegistryRequest_Details() {}

func (*UpdateRegistryRequest_Gitlab) isUpdateRegistryRequest_Details() {}

func (*UpdateRegistryRequest_Github) isUpdateRegistryRequest_Details() {}

func (*UpdateRegistryRequest_Google) isUpdateRegistryRequest_Details() {}

type RegistryDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit       *AuditResponse `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name        string         `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string        `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Icon        *string        `protobuf:"bytes,102,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	// Types that are assignable to Details:
	//	*RegistryDetailsResponse_Hub
	//	*RegistryDetailsResponse_V2
	//	*RegistryDetailsResponse_Gitlab
	//	*RegistryDetailsResponse_Github
	//	*RegistryDetailsResponse_Google
	Details isRegistryDetailsResponse_Details `protobuf_oneof:"details"`
}

func (x *RegistryDetailsResponse) Reset() {
	*x = RegistryDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryDetailsResponse) ProtoMessage() {}

func (x *RegistryDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryDetailsResponse.ProtoReflect.Descriptor instead.
func (*RegistryDetailsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{39}
}

func (x *RegistryDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegistryDetailsResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *RegistryDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegistryDetailsResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *RegistryDetailsResponse) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (m *RegistryDetailsResponse) GetDetails() isRegistryDetailsResponse_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *RegistryDetailsResponse) GetHub() *HubRegistryDetails {
	if x, ok := x.GetDetails().(*RegistryDetailsResponse_Hub); ok {
		return x.Hub
	}
	return nil
}

func (x *RegistryDetailsResponse) GetV2() *V2RegistryDetails {
	if x, ok := x.GetDetails().(*RegistryDetailsResponse_V2); ok {
		return x.V2
	}
	return nil
}

func (x *RegistryDetailsResponse) GetGitlab() *GitlabRegistryDetails {
	if x, ok := x.GetDetails().(*RegistryDetailsResponse_Gitlab); ok {
		return x.Gitlab
	}
	return nil
}

func (x *RegistryDetailsResponse) GetGithub() *GithubRegistryDetails {
	if x, ok := x.GetDetails().(*RegistryDetailsResponse_Github); ok {
		return x.Github
	}
	return nil
}

func (x *RegistryDetailsResponse) GetGoogle() *GoogleRegistryDetails {
	if x, ok := x.GetDetails().(*RegistryDetailsResponse_Google); ok {
		return x.Google
	}
	return nil
}

type isRegistryDetailsResponse_Details interface {
	isRegistryDetailsResponse_Details()
}

type RegistryDetailsResponse_Hub struct {
	Hub *HubRegistryDetails `protobuf:"bytes,200,opt,name=hub,proto3,oneof"`
}

type RegistryDetailsResponse_V2 struct {
	V2 *V2RegistryDetails `protobuf:"bytes,201,opt,name=v2,proto3,oneof"`
}

type RegistryDetailsResponse_Gitlab struct {
	Gitlab *GitlabRegistryDetails `protobuf:"bytes,202,opt,name=gitlab,proto3,oneof"`
}

type RegistryDetailsResponse_Github struct {
	Github *GithubRegistryDetails `protobuf:"bytes,203,opt,name=github,proto3,oneof"`
}

type RegistryDetailsResponse_Google struct {
	Google *GoogleRegistryDetails `protobuf:"bytes,204,opt,name=google,proto3,oneof"`
}

func (*RegistryDetailsResponse_Hub) isRegistryDetailsResponse_Details() {}

func (*RegistryDetailsResponse_V2) isRegistryDetailsResponse_Details() {}

func (*RegistryDetailsResponse_Gitlab) isRegistryDetailsResponse_Details() {}

func (*RegistryDetailsResponse_Github) isRegistryDetailsResponse_Details() {}

func (*RegistryDetailsResponse_Google) isRegistryDetailsResponse_Details() {}

type CreateVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy string      `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	ProductId  string      `protobuf:"bytes,100,opt,name=productId,proto3" json:"productId,omitempty"`
	Name       string      `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	Changelog  *string     `protobuf:"bytes,102,opt,name=changelog,proto3,oneof" json:"changelog,omitempty"`
	Type       VersionType `protobuf:"varint,104,opt,name=type,proto3,enum=crux.VersionType" json:"type,omitempty"`
}

func (x *CreateVersionRequest) Reset() {
	*x = CreateVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVersionRequest) ProtoMessage() {}

func (x *CreateVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVersionRequest.ProtoReflect.Descriptor instead.
func (*CreateVersionRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{40}
}

func (x *CreateVersionRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *CreateVersionRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CreateVersionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVersionRequest) GetChangelog() string {
	if x != nil && x.Changelog != nil {
		return *x.Changelog
	}
	return ""
}

func (x *CreateVersionRequest) GetType() VersionType {
	if x != nil {
		return x.Type
	}
	return VersionType_UNKNOWN_VERSION_TYPE
}

type UpdateVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name       string  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Changelog  *string `protobuf:"bytes,101,opt,name=changelog,proto3,oneof" json:"changelog,omitempty"`
}

func (x *UpdateVersionRequest) Reset() {
	*x = UpdateVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVersionRequest) ProtoMessage() {}

func (x *UpdateVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdateVersionRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateVersionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVersionRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *UpdateVersionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateVersionRequest) GetChangelog() string {
	if x != nil && x.Changelog != nil {
		return *x.Changelog
	}
	return ""
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit       *AuditResponse `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name        string         `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Changelog   string         `protobuf:"bytes,101,opt,name=changelog,proto3" json:"changelog,omitempty"`
	Default     bool           `protobuf:"varint,102,opt,name=default,proto3" json:"default,omitempty"`
	Type        VersionType    `protobuf:"varint,103,opt,name=type,proto3,enum=crux.VersionType" json:"type,omitempty"`
	Increasable bool           `protobuf:"varint,104,opt,name=increasable,proto3" json:"increasable,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{42}
}

func (x *VersionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VersionResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *VersionResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VersionResponse) GetChangelog() string {
	if x != nil {
		return x.Changelog
	}
	return ""
}

func (x *VersionResponse) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *VersionResponse) GetType() VersionType {
	if x != nil {
		return x.Type
	}
	return VersionType_UNKNOWN_VERSION_TYPE
}

func (x *VersionResponse) GetIncreasable() bool {
	if x != nil {
		return x.Increasable
	}
	return false
}

type VersionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*VersionResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *VersionListResponse) Reset() {
	*x = VersionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionListResponse) ProtoMessage() {}

func (x *VersionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionListResponse.ProtoReflect.Descriptor instead.
func (*VersionListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{43}
}

func (x *VersionListResponse) GetData() []*VersionResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type VersionDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit       *AuditResponse                 `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name        string                         `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Changelog   string                         `protobuf:"bytes,101,opt,name=changelog,proto3" json:"changelog,omitempty"`
	Default     bool                           `protobuf:"varint,102,opt,name=default,proto3" json:"default,omitempty"`
	Type        VersionType                    `protobuf:"varint,103,opt,name=type,proto3,enum=crux.VersionType" json:"type,omitempty"`
	Mutable     bool                           `protobuf:"varint,104,opt,name=mutable,proto3" json:"mutable,omitempty"`
	Increasable bool                           `protobuf:"varint,105,opt,name=increasable,proto3" json:"increasable,omitempty"`
	Images      []*ImageResponse               `protobuf:"bytes,1000,rep,name=images,proto3" json:"images,omitempty"`
	Deployments []*DeploymentByVersionResponse `protobuf:"bytes,1001,rep,name=deployments,proto3" json:"deployments,omitempty"`
}

func (x *VersionDetailsResponse) Reset() {
	*x = VersionDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionDetailsResponse) ProtoMessage() {}

func (x *VersionDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionDetailsResponse.ProtoReflect.Descriptor instead.
func (*VersionDetailsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{44}
}

func (x *VersionDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VersionDetailsResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *VersionDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VersionDetailsResponse) GetChangelog() string {
	if x != nil {
		return x.Changelog
	}
	return ""
}

func (x *VersionDetailsResponse) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *VersionDetailsResponse) GetType() VersionType {
	if x != nil {
		return x.Type
	}
	return VersionType_UNKNOWN_VERSION_TYPE
}

func (x *VersionDetailsResponse) GetMutable() bool {
	if x != nil {
		return x.Mutable
	}
	return false
}

func (x *VersionDetailsResponse) GetIncreasable() bool {
	if x != nil {
		return x.Increasable
	}
	return false
}

func (x *VersionDetailsResponse) GetImages() []*ImageResponse {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *VersionDetailsResponse) GetDeployments() []*DeploymentByVersionResponse {
	if x != nil {
		return x.Deployments
	}
	return nil
}

type IncreaseVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name       string  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Changelog  *string `protobuf:"bytes,101,opt,name=changelog,proto3,oneof" json:"changelog,omitempty"`
}

func (x *IncreaseVersionRequest) Reset() {
	*x = IncreaseVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreaseVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreaseVersionRequest) ProtoMessage() {}

func (x *IncreaseVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreaseVersionRequest.ProtoReflect.Descriptor instead.
func (*IncreaseVersionRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{45}
}

func (x *IncreaseVersionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IncreaseVersionRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *IncreaseVersionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IncreaseVersionRequest) GetChangelog() string {
	if x != nil && x.Changelog != nil {
		return *x.Changelog
	}
	return ""
}

type ContainerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config       *common.ExplicitContainerConfig `protobuf:"bytes,100,opt,name=config,proto3" json:"config,omitempty"`
	Name         string                          `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	Capabilities []*common.UniqueKeyValue        `protobuf:"bytes,1000,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	Environment  []*common.UniqueKeyValue        `protobuf:"bytes,1001,rep,name=environment,proto3" json:"environment,omitempty"`
	Secrets      []*common.UniqueKey             `protobuf:"bytes,1002,rep,name=secrets,proto3" json:"secrets,omitempty"`
}

func (x *ContainerConfig) Reset() {
	*x = ContainerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerConfig) ProtoMessage() {}

func (x *ContainerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerConfig.ProtoReflect.Descriptor instead.
func (*ContainerConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{46}
}

func (x *ContainerConfig) GetConfig() *common.ExplicitContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ContainerConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerConfig) GetCapabilities() []*common.UniqueKeyValue {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ContainerConfig) GetEnvironment() []*common.UniqueKeyValue {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *ContainerConfig) GetSecrets() []*common.UniqueKey {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type ImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Tag          string                 `protobuf:"bytes,101,opt,name=tag,proto3" json:"tag,omitempty"`
	Order        uint32                 `protobuf:"varint,102,opt,name=order,proto3" json:"order,omitempty"`
	RegistryId   string                 `protobuf:"bytes,103,opt,name=registryId,proto3" json:"registryId,omitempty"`
	Config       *ContainerConfig       `protobuf:"bytes,104,opt,name=config,proto3" json:"config,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,105,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	RegistryName string                 `protobuf:"bytes,106,opt,name=registryName,proto3" json:"registryName,omitempty"`
}

func (x *ImageResponse) Reset() {
	*x = ImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageResponse) ProtoMessage() {}

func (x *ImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageResponse.ProtoReflect.Descriptor instead.
func (*ImageResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{47}
}

func (x *ImageResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ImageResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageResponse) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ImageResponse) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ImageResponse) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *ImageResponse) GetConfig() *ContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ImageResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ImageResponse) GetRegistryName() string {
	if x != nil {
		return x.RegistryName
	}
	return ""
}

type ImageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ImageResponse `protobuf:"bytes,100,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ImageListResponse) Reset() {
	*x = ImageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageListResponse) ProtoMessage() {}

func (x *ImageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageListResponse.ProtoReflect.Descriptor instead.
func (*ImageListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{48}
}

func (x *ImageListResponse) GetData() []*ImageResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderVersionImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy string   `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	VersionId  string   `protobuf:"bytes,100,opt,name=versionId,proto3" json:"versionId,omitempty"`
	ImageIds   []string `protobuf:"bytes,101,rep,name=imageIds,proto3" json:"imageIds,omitempty"`
}

func (x *OrderVersionImagesRequest) Reset() {
	*x = OrderVersionImagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderVersionImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderVersionImagesRequest) ProtoMessage() {}

func (x *OrderVersionImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderVersionImagesRequest.ProtoReflect.Descriptor instead.
func (*OrderVersionImagesRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{49}
}

func (x *OrderVersionImagesRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *OrderVersionImagesRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *OrderVersionImagesRequest) GetImageIds() []string {
	if x != nil {
		return x.ImageIds
	}
	return nil
}

type RegistryImages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistryId string   `protobuf:"bytes,100,opt,name=registryId,proto3" json:"registryId,omitempty"`
	ImageNames []string `protobuf:"bytes,101,rep,name=imageNames,proto3" json:"imageNames,omitempty"`
}

func (x *RegistryImages) Reset() {
	*x = RegistryImages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryImages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryImages) ProtoMessage() {}

func (x *RegistryImages) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryImages.ProtoReflect.Descriptor instead.
func (*RegistryImages) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{50}
}

func (x *RegistryImages) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *RegistryImages) GetImageNames() []string {
	if x != nil {
		return x.ImageNames
	}
	return nil
}

type AddImagesToVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy string            `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	VersionId  string            `protobuf:"bytes,100,opt,name=versionId,proto3" json:"versionId,omitempty"`
	Images     []*RegistryImages `protobuf:"bytes,101,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *AddImagesToVersionRequest) Reset() {
	*x = AddImagesToVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddImagesToVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddImagesToVersionRequest) ProtoMessage() {}

func (x *AddImagesToVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddImagesToVersionRequest.ProtoReflect.Descriptor instead.
func (*AddImagesToVersionRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{51}
}

func (x *AddImagesToVersionRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *AddImagesToVersionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *AddImagesToVersionRequest) GetImages() []*RegistryImages {
	if x != nil {
		return x.Images
	}
	return nil
}

type PatchContainerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capabilities *common.KeyValueList            `protobuf:"bytes,100,opt,name=capabilities,proto3,oneof" json:"capabilities,omitempty"`
	Environment  *common.KeyValueList            `protobuf:"bytes,101,opt,name=environment,proto3,oneof" json:"environment,omitempty"`
	Secrets      *common.KeyList                 `protobuf:"bytes,102,opt,name=secrets,proto3,oneof" json:"secrets,omitempty"`
	Config       *common.ExplicitContainerConfig `protobuf:"bytes,103,opt,name=config,proto3,oneof" json:"config,omitempty"`
	Name         *string                         `protobuf:"bytes,104,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *PatchContainerConfig) Reset() {
	*x = PatchContainerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchContainerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchContainerConfig) ProtoMessage() {}

func (x *PatchContainerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchContainerConfig.ProtoReflect.Descriptor instead.
func (*PatchContainerConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{52}
}

func (x *PatchContainerConfig) GetCapabilities() *common.KeyValueList {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PatchContainerConfig) GetEnvironment() *common.KeyValueList {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *PatchContainerConfig) GetSecrets() *common.KeyList {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *PatchContainerConfig) GetConfig() *common.ExplicitContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PatchContainerConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type PatchImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string                `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Tag        *string               `protobuf:"bytes,101,opt,name=tag,proto3,oneof" json:"tag,omitempty"`
	Config     *PatchContainerConfig `protobuf:"bytes,102,opt,name=config,proto3,oneof" json:"config,omitempty"`
}

func (x *PatchImageRequest) Reset() {
	*x = PatchImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchImageRequest) ProtoMessage() {}

func (x *PatchImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchImageRequest.ProtoReflect.Descriptor instead.
func (*PatchImageRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{53}
}

func (x *PatchImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PatchImageRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *PatchImageRequest) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *PatchImageRequest) GetConfig() *PatchContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type NodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit       *AuditResponse         `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name        string                 `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string                `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Icon        *string                `protobuf:"bytes,102,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Address     *string                `protobuf:"bytes,103,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Status      NodeConnectionStatus   `protobuf:"varint,104,opt,name=status,proto3,enum=crux.NodeConnectionStatus" json:"status,omitempty"`
	ConnectedAt *timestamppb.Timestamp `protobuf:"bytes,105,opt,name=connectedAt,proto3,oneof" json:"connectedAt,omitempty"`
	Version     *string                `protobuf:"bytes,106,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Type        NodeType               `protobuf:"varint,107,opt,name=type,proto3,enum=crux.NodeType" json:"type,omitempty"`
}

func (x *NodeResponse) Reset() {
	*x = NodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeResponse) ProtoMessage() {}

func (x *NodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeResponse.ProtoReflect.Descriptor instead.
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{54}
}

func (x *NodeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *NodeResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *NodeResponse) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *NodeResponse) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *NodeResponse) GetStatus() NodeConnectionStatus {
	if x != nil {
		return x.Status
	}
	return NodeConnectionStatus_UNKNOWN_CONNECTION_STATUS
}

func (x *NodeResponse) GetConnectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectedAt
	}
	return nil
}

func (x *NodeResponse) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *NodeResponse) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_UNKNOWN_NODE_TYPE
}

type NodeDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit       *AuditResponse         `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name        string                 `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string                `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Icon        *string                `protobuf:"bytes,102,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Address     *string                `protobuf:"bytes,103,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Status      NodeConnectionStatus   `protobuf:"varint,104,opt,name=status,proto3,enum=crux.NodeConnectionStatus" json:"status,omitempty"`
	HasToken    bool                   `protobuf:"varint,105,opt,name=hasToken,proto3" json:"hasToken,omitempty"`
	ConnectedAt *timestamppb.Timestamp `protobuf:"bytes,106,opt,name=connectedAt,proto3,oneof" json:"connectedAt,omitempty"`
	Install     *NodeInstallResponse   `protobuf:"bytes,107,opt,name=install,proto3,oneof" json:"install,omitempty"`
	Script      *NodeScriptResponse    `protobuf:"bytes,108,opt,name=script,proto3,oneof" json:"script,omitempty"`
	Version     *string                `protobuf:"bytes,109,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Type        NodeType               `protobuf:"varint,110,opt,name=type,proto3,enum=crux.NodeType" json:"type,omitempty"`
}

func (x *NodeDetailsResponse) Reset() {
	*x = NodeDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDetailsResponse) ProtoMessage() {}

func (x *NodeDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDetailsResponse.ProtoReflect.Descriptor instead.
func (*NodeDetailsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{55}
}

func (x *NodeDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeDetailsResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *NodeDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeDetailsResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *NodeDetailsResponse) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *NodeDetailsResponse) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *NodeDetailsResponse) GetStatus() NodeConnectionStatus {
	if x != nil {
		return x.Status
	}
	return NodeConnectionStatus_UNKNOWN_CONNECTION_STATUS
}

func (x *NodeDetailsResponse) GetHasToken() bool {
	if x != nil {
		return x.HasToken
	}
	return false
}

func (x *NodeDetailsResponse) GetConnectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectedAt
	}
	return nil
}

func (x *NodeDetailsResponse) GetInstall() *NodeInstallResponse {
	if x != nil {
		return x.Install
	}
	return nil
}

func (x *NodeDetailsResponse) GetScript() *NodeScriptResponse {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *NodeDetailsResponse) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *NodeDetailsResponse) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_UNKNOWN_NODE_TYPE
}

type NodeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*NodeResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *NodeListResponse) Reset() {
	*x = NodeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListResponse) ProtoMessage() {}

func (x *NodeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListResponse.ProtoReflect.Descriptor instead.
func (*NodeListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{56}
}

func (x *NodeListResponse) GetData() []*NodeResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy  string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name        string  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Icon        *string `protobuf:"bytes,102,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
}

func (x *CreateNodeRequest) Reset() {
	*x = CreateNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeRequest) ProtoMessage() {}

func (x *CreateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeRequest.ProtoReflect.Descriptor instead.
func (*CreateNodeRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{57}
}

func (x *CreateNodeRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *CreateNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNodeRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateNodeRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

type UpdateNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy  string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name        string  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Description *string `protobuf:"bytes,101,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Icon        *string `protobuf:"bytes,102,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
}

func (x *UpdateNodeRequest) Reset() {
	*x = UpdateNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeRequest) ProtoMessage() {}

func (x *UpdateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNodeRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *UpdateNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNodeRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateNodeRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

type GenerateScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string   `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Type       NodeType `protobuf:"varint,100,opt,name=type,proto3,enum=crux.NodeType" json:"type,omitempty"`
	RootPath   *string  `protobuf:"bytes,101,opt,name=rootPath,proto3,oneof" json:"rootPath,omitempty"`
}

func (x *GenerateScriptRequest) Reset() {
	*x = GenerateScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateScriptRequest) ProtoMessage() {}

func (x *GenerateScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateScriptRequest.ProtoReflect.Descriptor instead.
func (*GenerateScriptRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{59}
}

func (x *GenerateScriptRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GenerateScriptRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *GenerateScriptRequest) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_UNKNOWN_NODE_TYPE
}

func (x *GenerateScriptRequest) GetRootPath() string {
	if x != nil && x.RootPath != nil {
		return *x.RootPath
	}
	return ""
}

type NodeInstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command  string                 `protobuf:"bytes,100,opt,name=command,proto3" json:"command,omitempty"`
	ExpireAt *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=expireAt,proto3" json:"expireAt,omitempty"`
}

func (x *NodeInstallResponse) Reset() {
	*x = NodeInstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInstallResponse) ProtoMessage() {}

func (x *NodeInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInstallResponse.ProtoReflect.Descriptor instead.
func (*NodeInstallResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{60}
}

func (x *NodeInstallResponse) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *NodeInstallResponse) GetExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireAt
	}
	return nil
}

type NodeScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,100,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *NodeScriptResponse) Reset() {
	*x = NodeScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeScriptResponse) ProtoMessage() {}

func (x *NodeScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeScriptResponse.ProtoReflect.Descriptor instead.
func (*NodeScriptResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{61}
}

func (x *NodeScriptResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type NodeEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status  NodeConnectionStatus `protobuf:"varint,100,opt,name=status,proto3,enum=crux.NodeConnectionStatus" json:"status,omitempty"`
	Address *string              `protobuf:"bytes,101,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *NodeEventMessage) Reset() {
	*x = NodeEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeEventMessage) ProtoMessage() {}

func (x *NodeEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeEventMessage.ProtoReflect.Descriptor instead.
func (*NodeEventMessage) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{62}
}

func (x *NodeEventMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeEventMessage) GetStatus() NodeConnectionStatus {
	if x != nil {
		return x.Status
	}
	return NodeConnectionStatus_UNKNOWN_CONNECTION_STATUS
}

func (x *NodeEventMessage) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type WatchContainerStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	NodeId     string  `protobuf:"bytes,100,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Prefix     *string `protobuf:"bytes,101,opt,name=prefix,proto3,oneof" json:"prefix,omitempty"`
}

func (x *WatchContainerStateRequest) Reset() {
	*x = WatchContainerStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchContainerStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchContainerStateRequest) ProtoMessage() {}

func (x *WatchContainerStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchContainerStateRequest.ProtoReflect.Descriptor instead.
func (*WatchContainerStateRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{63}
}

func (x *WatchContainerStateRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *WatchContainerStateRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *WatchContainerStateRequest) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

type ContainerStateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string                 `protobuf:"bytes,100,opt,name=containerId,proto3" json:"containerId,omitempty"`
	Name        string                 `protobuf:"bytes,101,opt,name=name,proto3" json:"name,omitempty"`
	Command     string                 `protobuf:"bytes,103,opt,name=command,proto3" json:"command,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,104,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// The 'State' of the container (Created, Running, etc)
	State common.ContainerState `protobuf:"varint,105,opt,name=state,proto3,enum=common.ContainerState" json:"state,omitempty"`
	//
	// The 'Status' of the container ("Created 1min ago", "Exited with code 123",
	// etc). Unused but left here for reverse compatibility with the legacy
	// version.
	Status    string         `protobuf:"bytes,106,opt,name=status,proto3" json:"status,omitempty"`
	ImageName string         `protobuf:"bytes,107,opt,name=imageName,proto3" json:"imageName,omitempty"`
	ImageTag  string         `protobuf:"bytes,108,opt,name=imageTag,proto3" json:"imageTag,omitempty"`
	Ports     []*common.Port `protobuf:"bytes,1000,rep,name=ports,proto3" json:"ports,omitempty"`
}

func (x *ContainerStateItem) Reset() {
	*x = ContainerStateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerStateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStateItem) ProtoMessage() {}

func (x *ContainerStateItem) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStateItem.ProtoReflect.Descriptor instead.
func (*ContainerStateItem) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{64}
}

func (x *ContainerStateItem) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerStateItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerStateItem) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ContainerStateItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ContainerStateItem) GetState() common.ContainerState {
	if x != nil {
		return x.State
	}
	return common.ContainerState_UNKNOWN_CONTAINER_STATE
}

func (x *ContainerStateItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ContainerStateItem) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ContainerStateItem) GetImageTag() string {
	if x != nil {
		return x.ImageTag
	}
	return ""
}

func (x *ContainerStateItem) GetPorts() []*common.Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

type ContainerStateListMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix *string               `protobuf:"bytes,100,opt,name=prefix,proto3,oneof" json:"prefix,omitempty"`
	Data   []*ContainerStateItem `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ContainerStateListMessage) Reset() {
	*x = ContainerStateListMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerStateListMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStateListMessage) ProtoMessage() {}

func (x *ContainerStateListMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStateListMessage.ProtoReflect.Descriptor instead.
func (*ContainerStateListMessage) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{65}
}

func (x *ContainerStateListMessage) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *ContainerStateListMessage) GetData() []*ContainerStateItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeploymentProgressMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status   *common.DeploymentStatus       `protobuf:"varint,100,opt,name=status,proto3,enum=common.DeploymentStatus,oneof" json:"status,omitempty"`
	Instance *common.InstanceDeploymentItem `protobuf:"bytes,101,opt,name=instance,proto3,oneof" json:"instance,omitempty"`
	Log      []string                       `protobuf:"bytes,1000,rep,name=log,proto3" json:"log,omitempty"`
}

func (x *DeploymentProgressMessage) Reset() {
	*x = DeploymentProgressMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentProgressMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentProgressMessage) ProtoMessage() {}

func (x *DeploymentProgressMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentProgressMessage.ProtoReflect.Descriptor instead.
func (*DeploymentProgressMessage) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{66}
}

func (x *DeploymentProgressMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeploymentProgressMessage) GetStatus() common.DeploymentStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.DeploymentStatus_UNKNOWN_DEPLOYMENT_STATUS
}

func (x *DeploymentProgressMessage) GetInstance() *common.InstanceDeploymentItem {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *DeploymentProgressMessage) GetLog() []string {
	if x != nil {
		return x.Log
	}
	return nil
}

type InstancesCreatedEventList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*InstanceResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *InstancesCreatedEventList) Reset() {
	*x = InstancesCreatedEventList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstancesCreatedEventList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstancesCreatedEventList) ProtoMessage() {}

func (x *InstancesCreatedEventList) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstancesCreatedEventList.ProtoReflect.Descriptor instead.
func (*InstancesCreatedEventList) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{67}
}

func (x *InstancesCreatedEventList) GetData() []*InstanceResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeploymentEditEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*DeploymentEditEventMessage_InstancesCreated
	//	*DeploymentEditEventMessage_ImageIdDeleted
	Data isDeploymentEditEventMessage_Data `protobuf_oneof:"data"`
}

func (x *DeploymentEditEventMessage) Reset() {
	*x = DeploymentEditEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentEditEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentEditEventMessage) ProtoMessage() {}

func (x *DeploymentEditEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentEditEventMessage.ProtoReflect.Descriptor instead.
func (*DeploymentEditEventMessage) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{68}
}

func (m *DeploymentEditEventMessage) GetData() isDeploymentEditEventMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *DeploymentEditEventMessage) GetInstancesCreated() *InstancesCreatedEventList {
	if x, ok := x.GetData().(*DeploymentEditEventMessage_InstancesCreated); ok {
		return x.InstancesCreated
	}
	return nil
}

func (x *DeploymentEditEventMessage) GetImageIdDeleted() string {
	if x, ok := x.GetData().(*DeploymentEditEventMessage_ImageIdDeleted); ok {
		return x.ImageIdDeleted
	}
	return ""
}

type isDeploymentEditEventMessage_Data interface {
	isDeploymentEditEventMessage_Data()
}

type DeploymentEditEventMessage_InstancesCreated struct {
	InstancesCreated *InstancesCreatedEventList `protobuf:"bytes,200,opt,name=instancesCreated,proto3,oneof"`
}

type DeploymentEditEventMessage_ImageIdDeleted struct {
	ImageIdDeleted string `protobuf:"bytes,201,opt,name=imageIdDeleted,proto3,oneof"`
}

func (*DeploymentEditEventMessage_InstancesCreated) isDeploymentEditEventMessage_Data() {}

func (*DeploymentEditEventMessage_ImageIdDeleted) isDeploymentEditEventMessage_Data() {}

type CreateDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	VersionId  string  `protobuf:"bytes,100,opt,name=versionId,proto3" json:"versionId,omitempty"`
	NodeId     string  `protobuf:"bytes,101,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Note       *string `protobuf:"bytes,102,opt,name=note,proto3,oneof" json:"note,omitempty"`
	Prefix     string  `protobuf:"bytes,103,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *CreateDeploymentRequest) Reset() {
	*x = CreateDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeploymentRequest) ProtoMessage() {}

func (x *CreateDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeploymentRequest.ProtoReflect.Descriptor instead.
func (*CreateDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{69}
}

func (x *CreateDeploymentRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *CreateDeploymentRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *CreateDeploymentRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CreateDeploymentRequest) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *CreateDeploymentRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type UpdateDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Note       *string `protobuf:"bytes,100,opt,name=note,proto3,oneof" json:"note,omitempty"`
	Prefix     string  `protobuf:"bytes,101,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *UpdateDeploymentRequest) Reset() {
	*x = UpdateDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeploymentRequest) ProtoMessage() {}

func (x *UpdateDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeploymentRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{70}
}

func (x *UpdateDeploymentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDeploymentRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *UpdateDeploymentRequest) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *UpdateDeploymentRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type PatchDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy  string                `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Environment *common.KeyValueList  `protobuf:"bytes,100,opt,name=environment,proto3,oneof" json:"environment,omitempty"`
	Instance    *PatchInstanceRequest `protobuf:"bytes,1001,opt,name=instance,proto3,oneof" json:"instance,omitempty"`
}

func (x *PatchDeploymentRequest) Reset() {
	*x = PatchDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchDeploymentRequest) ProtoMessage() {}

func (x *PatchDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchDeploymentRequest.ProtoReflect.Descriptor instead.
func (*PatchDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{71}
}

func (x *PatchDeploymentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PatchDeploymentRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *PatchDeploymentRequest) GetEnvironment() *common.KeyValueList {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *PatchDeploymentRequest) GetInstance() *PatchInstanceRequest {
	if x != nil {
		return x.Instance
	}
	return nil
}

type InstanceContainerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config       *common.ExplicitContainerConfig `protobuf:"bytes,100,opt,name=config,proto3" json:"config,omitempty"`
	Capabilities []*common.UniqueKeyValue        `protobuf:"bytes,1000,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	Environment  []*common.UniqueKeyValue        `protobuf:"bytes,1001,rep,name=environment,proto3" json:"environment,omitempty"`
	Secrets      []*common.UniqueKeySecretValue  `protobuf:"bytes,1002,rep,name=secrets,proto3" json:"secrets,omitempty"`
}

func (x *InstanceContainerConfig) Reset() {
	*x = InstanceContainerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceContainerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceContainerConfig) ProtoMessage() {}

func (x *InstanceContainerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceContainerConfig.ProtoReflect.Descriptor instead.
func (*InstanceContainerConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{72}
}

func (x *InstanceContainerConfig) GetConfig() *common.ExplicitContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *InstanceContainerConfig) GetCapabilities() []*common.UniqueKeyValue {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *InstanceContainerConfig) GetEnvironment() []*common.UniqueKeyValue {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *InstanceContainerConfig) GetSecrets() []*common.UniqueKeySecretValue {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type InstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit  *AuditResponse           `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Image  *ImageResponse           `protobuf:"bytes,100,opt,name=image,proto3" json:"image,omitempty"`
	State  *common.ContainerState   `protobuf:"varint,101,opt,name=state,proto3,enum=common.ContainerState,oneof" json:"state,omitempty"`
	Config *InstanceContainerConfig `protobuf:"bytes,102,opt,name=config,proto3,oneof" json:"config,omitempty"`
}

func (x *InstanceResponse) Reset() {
	*x = InstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceResponse) ProtoMessage() {}

func (x *InstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceResponse.ProtoReflect.Descriptor instead.
func (*InstanceResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{73}
}

func (x *InstanceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InstanceResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *InstanceResponse) GetImage() *ImageResponse {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *InstanceResponse) GetState() common.ContainerState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return common.ContainerState_UNKNOWN_CONTAINER_STATE
}

func (x *InstanceResponse) GetConfig() *InstanceContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type PatchInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy   string                          `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Environment  *common.KeyValueList            `protobuf:"bytes,100,opt,name=environment,proto3,oneof" json:"environment,omitempty"`
	Capabilities *common.KeyValueList            `protobuf:"bytes,101,opt,name=capabilities,proto3,oneof" json:"capabilities,omitempty"`
	Config       *common.ExplicitContainerConfig `protobuf:"bytes,102,opt,name=config,proto3,oneof" json:"config,omitempty"`
	Secrets      *common.SecretList              `protobuf:"bytes,103,opt,name=secrets,proto3,oneof" json:"secrets,omitempty"`
}

func (x *PatchInstanceRequest) Reset() {
	*x = PatchInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchInstanceRequest) ProtoMessage() {}

func (x *PatchInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchInstanceRequest.ProtoReflect.Descriptor instead.
func (*PatchInstanceRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{74}
}

func (x *PatchInstanceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PatchInstanceRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *PatchInstanceRequest) GetEnvironment() *common.KeyValueList {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *PatchInstanceRequest) GetCapabilities() *common.KeyValueList {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PatchInstanceRequest) GetConfig() *common.ExplicitContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PatchInstanceRequest) GetSecrets() *common.SecretList {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type DeploymentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DeploymentResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DeploymentListResponse) Reset() {
	*x = DeploymentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentListResponse) ProtoMessage() {}

func (x *DeploymentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentListResponse.ProtoReflect.Descriptor instead.
func (*DeploymentListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{75}
}

func (x *DeploymentListResponse) GetData() []*DeploymentResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Product   string                  `protobuf:"bytes,100,opt,name=product,proto3" json:"product,omitempty"`
	ProductId string                  `protobuf:"bytes,101,opt,name=productId,proto3" json:"productId,omitempty"`
	Version   string                  `protobuf:"bytes,102,opt,name=version,proto3" json:"version,omitempty"`
	VersionId string                  `protobuf:"bytes,103,opt,name=versionId,proto3" json:"versionId,omitempty"`
	Node      string                  `protobuf:"bytes,104,opt,name=node,proto3" json:"node,omitempty"`
	Status    common.DeploymentStatus `protobuf:"varint,105,opt,name=status,proto3,enum=common.DeploymentStatus" json:"status,omitempty"`
	NodeId    string                  `protobuf:"bytes,106,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Note      *string                 `protobuf:"bytes,107,opt,name=note,proto3,oneof" json:"note,omitempty"`
	Prefix    string                  `protobuf:"bytes,108,opt,name=prefix,proto3" json:"prefix,omitempty"`
	UpdatedAt *timestamppb.Timestamp  `protobuf:"bytes,109,opt,name=updatedAt,proto3,oneof" json:"updatedAt,omitempty"`
}

func (x *DeploymentResponse) Reset() {
	*x = DeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentResponse) ProtoMessage() {}

func (x *DeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentResponse.ProtoReflect.Descriptor instead.
func (*DeploymentResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{76}
}

func (x *DeploymentResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeploymentResponse) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *DeploymentResponse) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *DeploymentResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeploymentResponse) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *DeploymentResponse) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *DeploymentResponse) GetStatus() common.DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return common.DeploymentStatus_UNKNOWN_DEPLOYMENT_STATUS
}

func (x *DeploymentResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *DeploymentResponse) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *DeploymentResponse) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *DeploymentResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DeploymentListByVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DeploymentByVersionResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DeploymentListByVersionResponse) Reset() {
	*x = DeploymentListByVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentListByVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentListByVersionResponse) ProtoMessage() {}

func (x *DeploymentListByVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentListByVersionResponse.ProtoReflect.Descriptor instead.
func (*DeploymentListByVersionResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{77}
}

func (x *DeploymentListByVersionResponse) GetData() []*DeploymentByVersionResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeploymentByVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit      *AuditResponse          `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Prefix     string                  `protobuf:"bytes,100,opt,name=prefix,proto3" json:"prefix,omitempty"`
	NodeId     string                  `protobuf:"bytes,101,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	NodeName   string                  `protobuf:"bytes,102,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	Status     common.DeploymentStatus `protobuf:"varint,103,opt,name=status,proto3,enum=common.DeploymentStatus" json:"status,omitempty"`
	NodeStatus NodeConnectionStatus    `protobuf:"varint,104,opt,name=nodeStatus,proto3,enum=crux.NodeConnectionStatus" json:"nodeStatus,omitempty"`
	Note       *string                 `protobuf:"bytes,105,opt,name=note,proto3,oneof" json:"note,omitempty"`
}

func (x *DeploymentByVersionResponse) Reset() {
	*x = DeploymentByVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentByVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentByVersionResponse) ProtoMessage() {}

func (x *DeploymentByVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentByVersionResponse.ProtoReflect.Descriptor instead.
func (*DeploymentByVersionResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{78}
}

func (x *DeploymentByVersionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeploymentByVersionResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *DeploymentByVersionResponse) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *DeploymentByVersionResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *DeploymentByVersionResponse) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *DeploymentByVersionResponse) GetStatus() common.DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return common.DeploymentStatus_UNKNOWN_DEPLOYMENT_STATUS
}

func (x *DeploymentByVersionResponse) GetNodeStatus() NodeConnectionStatus {
	if x != nil {
		return x.NodeStatus
	}
	return NodeConnectionStatus_UNKNOWN_CONNECTION_STATUS
}

func (x *DeploymentByVersionResponse) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

type DeploymentDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit            *AuditResponse           `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	ProductVersionId string                   `protobuf:"bytes,100,opt,name=productVersionId,proto3" json:"productVersionId,omitempty"`
	NodeId           string                   `protobuf:"bytes,101,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Note             *string                  `protobuf:"bytes,102,opt,name=note,proto3,oneof" json:"note,omitempty"`
	Prefix           string                   `protobuf:"bytes,103,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Environment      []*common.UniqueKeyValue `protobuf:"bytes,104,rep,name=environment,proto3" json:"environment,omitempty"`
	Status           common.DeploymentStatus  `protobuf:"varint,105,opt,name=status,proto3,enum=common.DeploymentStatus" json:"status,omitempty"`
	PublicKey        *string                  `protobuf:"bytes,106,opt,name=publicKey,proto3,oneof" json:"publicKey,omitempty"`
	Instances        []*InstanceResponse      `protobuf:"bytes,1000,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *DeploymentDetailsResponse) Reset() {
	*x = DeploymentDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentDetailsResponse) ProtoMessage() {}

func (x *DeploymentDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentDetailsResponse.ProtoReflect.Descriptor instead.
func (*DeploymentDetailsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{79}
}

func (x *DeploymentDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeploymentDetailsResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *DeploymentDetailsResponse) GetProductVersionId() string {
	if x != nil {
		return x.ProductVersionId
	}
	return ""
}

func (x *DeploymentDetailsResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *DeploymentDetailsResponse) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *DeploymentDetailsResponse) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *DeploymentDetailsResponse) GetEnvironment() []*common.UniqueKeyValue {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *DeploymentDetailsResponse) GetStatus() common.DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return common.DeploymentStatus_UNKNOWN_DEPLOYMENT_STATUS
}

func (x *DeploymentDetailsResponse) GetPublicKey() string {
	if x != nil && x.PublicKey != nil {
		return *x.PublicKey
	}
	return ""
}

func (x *DeploymentDetailsResponse) GetInstances() []*InstanceResponse {
	if x != nil {
		return x.Instances
	}
	return nil
}

type DeploymentEventContainerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string                `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	State      common.ContainerState `protobuf:"varint,2,opt,name=state,proto3,enum=common.ContainerState" json:"state,omitempty"`
}

func (x *DeploymentEventContainerState) Reset() {
	*x = DeploymentEventContainerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentEventContainerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentEventContainerState) ProtoMessage() {}

func (x *DeploymentEventContainerState) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentEventContainerState.ProtoReflect.Descriptor instead.
func (*DeploymentEventContainerState) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{80}
}

func (x *DeploymentEventContainerState) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DeploymentEventContainerState) GetState() common.ContainerState {
	if x != nil {
		return x.State
	}
	return common.ContainerState_UNKNOWN_CONTAINER_STATE
}

type DeploymentEventLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log []string `protobuf:"bytes,1000,rep,name=log,proto3" json:"log,omitempty"`
}

func (x *DeploymentEventLog) Reset() {
	*x = DeploymentEventLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentEventLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentEventLog) ProtoMessage() {}

func (x *DeploymentEventLog) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentEventLog.ProtoReflect.Descriptor instead.
func (*DeploymentEventLog) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{81}
}

func (x *DeploymentEventLog) GetLog() []string {
	if x != nil {
		return x.Log
	}
	return nil
}

type DeploymentEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      DeploymentEventType    `protobuf:"varint,100,opt,name=type,proto3,enum=crux.DeploymentEventType" json:"type,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// Types that are assignable to Details:
	//	*DeploymentEventResponse_Log
	//	*DeploymentEventResponse_DeploymentStatus
	//	*DeploymentEventResponse_ContainerStatus
	Details isDeploymentEventResponse_Details `protobuf_oneof:"details"`
}

func (x *DeploymentEventResponse) Reset() {
	*x = DeploymentEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentEventResponse) ProtoMessage() {}

func (x *DeploymentEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentEventResponse.ProtoReflect.Descriptor instead.
func (*DeploymentEventResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{82}
}

func (x *DeploymentEventResponse) GetType() DeploymentEventType {
	if x != nil {
		return x.Type
	}
	return DeploymentEventType_UNKNOWN_DEPLOYMENT_EVENT_TYPE
}

func (x *DeploymentEventResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (m *DeploymentEventResponse) GetDetails() isDeploymentEventResponse_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *DeploymentEventResponse) GetLog() *DeploymentEventLog {
	if x, ok := x.GetDetails().(*DeploymentEventResponse_Log); ok {
		return x.Log
	}
	return nil
}

func (x *DeploymentEventResponse) GetDeploymentStatus() common.DeploymentStatus {
	if x, ok := x.GetDetails().(*DeploymentEventResponse_DeploymentStatus); ok {
		return x.DeploymentStatus
	}
	return common.DeploymentStatus_UNKNOWN_DEPLOYMENT_STATUS
}

func (x *DeploymentEventResponse) GetContainerStatus() *DeploymentEventContainerState {
	if x, ok := x.GetDetails().(*DeploymentEventResponse_ContainerStatus); ok {
		return x.ContainerStatus
	}
	return nil
}

type isDeploymentEventResponse_Details interface {
	isDeploymentEventResponse_Details()
}

type DeploymentEventResponse_Log struct {
	Log *DeploymentEventLog `protobuf:"bytes,200,opt,name=log,proto3,oneof"`
}

type DeploymentEventResponse_DeploymentStatus struct {
	DeploymentStatus common.DeploymentStatus `protobuf:"varint,201,opt,name=deploymentStatus,proto3,enum=common.DeploymentStatus,oneof"`
}

type DeploymentEventResponse_ContainerStatus struct {
	ContainerStatus *DeploymentEventContainerState `protobuf:"bytes,202,opt,name=containerStatus,proto3,oneof"`
}

func (*DeploymentEventResponse_Log) isDeploymentEventResponse_Details() {}

func (*DeploymentEventResponse_DeploymentStatus) isDeploymentEventResponse_Details() {}

func (*DeploymentEventResponse_ContainerStatus) isDeploymentEventResponse_Details() {}

type DeploymentEventListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DeploymentEventResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DeploymentEventListResponse) Reset() {
	*x = DeploymentEventListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentEventListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentEventListResponse) ProtoMessage() {}

func (x *DeploymentEventListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentEventListResponse.ProtoReflect.Descriptor instead.
func (*DeploymentEventListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{83}
}

func (x *DeploymentEventListResponse) GetData() []*DeploymentEventResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeploymentListSecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	InstanceId string `protobuf:"bytes,3,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (x *DeploymentListSecretsRequest) Reset() {
	*x = DeploymentListSecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentListSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentListSecretsRequest) ProtoMessage() {}

func (x *DeploymentListSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentListSecretsRequest.ProtoReflect.Descriptor instead.
func (*DeploymentListSecretsRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{84}
}

func (x *DeploymentListSecretsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeploymentListSecretsRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *DeploymentListSecretsRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type CreateNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessedBy string                  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name       string                  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Url        string                  `protobuf:"bytes,101,opt,name=url,proto3" json:"url,omitempty"`
	Type       NotificationType        `protobuf:"varint,102,opt,name=type,proto3,enum=crux.NotificationType" json:"type,omitempty"`
	Active     bool                    `protobuf:"varint,103,opt,name=active,proto3" json:"active,omitempty"`
	Events     []NotificationEventType `protobuf:"varint,1000,rep,packed,name=events,proto3,enum=crux.NotificationEventType" json:"events,omitempty"`
}

func (x *CreateNotificationRequest) Reset() {
	*x = CreateNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRequest) ProtoMessage() {}

func (x *CreateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{85}
}

func (x *CreateNotificationRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *CreateNotificationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNotificationRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateNotificationRequest) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_UNKNOWN_NOTIFICATION_TYPE
}

func (x *CreateNotificationRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *CreateNotificationRequest) GetEvents() []NotificationEventType {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Creator string `protobuf:"bytes,100,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *CreateNotificationResponse) Reset() {
	*x = CreateNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationResponse) ProtoMessage() {}

func (x *CreateNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateNotificationResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{86}
}

func (x *CreateNotificationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateNotificationResponse) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type UpdateNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessedBy string                  `protobuf:"bytes,2,opt,name=accessedBy,proto3" json:"accessedBy,omitempty"`
	Name       string                  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Url        string                  `protobuf:"bytes,101,opt,name=url,proto3" json:"url,omitempty"`
	Type       NotificationType        `protobuf:"varint,102,opt,name=type,proto3,enum=crux.NotificationType" json:"type,omitempty"`
	Active     bool                    `protobuf:"varint,103,opt,name=active,proto3" json:"active,omitempty"`
	Events     []NotificationEventType `protobuf:"varint,1000,rep,packed,name=events,proto3,enum=crux.NotificationEventType" json:"events,omitempty"`
}

func (x *UpdateNotificationRequest) Reset() {
	*x = UpdateNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationRequest) ProtoMessage() {}

func (x *UpdateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{87}
}

func (x *UpdateNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNotificationRequest) GetAccessedBy() string {
	if x != nil {
		return x.AccessedBy
	}
	return ""
}

func (x *UpdateNotificationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNotificationRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateNotificationRequest) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_UNKNOWN_NOTIFICATION_TYPE
}

func (x *UpdateNotificationRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UpdateNotificationRequest) GetEvents() []NotificationEventType {
	if x != nil {
		return x.Events
	}
	return nil
}

type NotificationDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit  *AuditResponse          `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name   string                  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Url    string                  `protobuf:"bytes,101,opt,name=url,proto3" json:"url,omitempty"`
	Type   NotificationType        `protobuf:"varint,102,opt,name=type,proto3,enum=crux.NotificationType" json:"type,omitempty"`
	Active bool                    `protobuf:"varint,103,opt,name=active,proto3" json:"active,omitempty"`
	Events []NotificationEventType `protobuf:"varint,1000,rep,packed,name=events,proto3,enum=crux.NotificationEventType" json:"events,omitempty"`
}

func (x *NotificationDetailsResponse) Reset() {
	*x = NotificationDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationDetailsResponse) ProtoMessage() {}

func (x *NotificationDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationDetailsResponse.ProtoReflect.Descriptor instead.
func (*NotificationDetailsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{88}
}

func (x *NotificationDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotificationDetailsResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *NotificationDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotificationDetailsResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NotificationDetailsResponse) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_UNKNOWN_NOTIFICATION_TYPE
}

func (x *NotificationDetailsResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *NotificationDetailsResponse) GetEvents() []NotificationEventType {
	if x != nil {
		return x.Events
	}
	return nil
}

type NotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Audit  *AuditResponse          `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	Name   string                  `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	Url    string                  `protobuf:"bytes,101,opt,name=url,proto3" json:"url,omitempty"`
	Type   NotificationType        `protobuf:"varint,103,opt,name=type,proto3,enum=crux.NotificationType" json:"type,omitempty"`
	Active bool                    `protobuf:"varint,104,opt,name=active,proto3" json:"active,omitempty"`
	Events []NotificationEventType `protobuf:"varint,1000,rep,packed,name=events,proto3,enum=crux.NotificationEventType" json:"events,omitempty"`
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{89}
}

func (x *NotificationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotificationResponse) GetAudit() *AuditResponse {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *NotificationResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotificationResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NotificationResponse) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_UNKNOWN_NOTIFICATION_TYPE
}

func (x *NotificationResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *NotificationResponse) GetEvents() []NotificationEventType {
	if x != nil {
		return x.Events
	}
	return nil
}

type NotificationListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*NotificationResponse `protobuf:"bytes,1000,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *NotificationListResponse) Reset() {
	*x = NotificationListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationListResponse) ProtoMessage() {}

func (x *NotificationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationListResponse.ProtoReflect.Descriptor instead.
func (*NotificationListResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{90}
}

func (x *NotificationListResponse) GetData() []*NotificationResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        ServiceStatus `protobuf:"varint,100,opt,name=status,proto3,enum=crux.ServiceStatus" json:"status,omitempty"`
	CruxVersion   string        `protobuf:"bytes,101,opt,name=cruxVersion,proto3" json:"cruxVersion,omitempty"`
	LastMigration *string       `protobuf:"bytes,102,opt,name=lastMigration,proto3,oneof" json:"lastMigration,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_proto_crux_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_proto_crux_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_proto_crux_proto_rawDescGZIP(), []int{91}
}

func (x *HealthResponse) GetStatus() ServiceStatus {
	if x != nil {
		return x.Status
	}
	return ServiceStatus_UNKNOWN_SERVICE_STATUS
}

func (x *HealthResponse) GetCruxVersion() string {
	if x != nil {
		return x.CruxVersion
	}
	return ""
}

func (x *HealthResponse) GetLastMigration() string {
	if x != nil && x.LastMigration != nil {
		return *x.LastMigration
	}
	return ""
}

var File_protobuf_proto_crux_proto protoreflect.FileDescriptor

var file_protobuf_proto_crux_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x72, 0x75,
	0x78, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x09,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x22, 0xe5, 0x01, 0x0a, 0x0d, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x60, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x50, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x02, 0x0a, 0x13, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x22, 0x31, 0x0a, 0x19, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x14, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x59, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x63, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d,
	0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74, 0x65,
	0x61, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xe9, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x32, 0x0a, 0x0c, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0xe8, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x96, 0x01, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x71, 0x0a, 0x15, 0x54, 0x65, 0x61, 0x6d,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x13,
	0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x29, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x44, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x54,
	0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe3,
	0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x28, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x22, 0xf8, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xe1, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xc2, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f,
	0x67, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x6c, 0x6f, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x6c, 0x6f, 0x67, 0x22, 0xf4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x14,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x3e, 0x0a, 0x12, 0x48, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x22, 0x6c, 0x0a, 0x11, 0x56, 0x32, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xe9, 0x01, 0x0a, 0x15, 0x47, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x15, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x18, 0x68,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x35, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x69,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x22, 0xa2, 0x01, 0x0a, 0x15,
	0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x35, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x22, 0x9a, 0x01, 0x0a, 0x15, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb2, 0x03,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x03, 0x68,
	0x75, 0x62, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x48, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x03, 0x68, 0x75, 0x62, 0x12, 0x2a, 0x0a, 0x02, 0x76, 0x32,
	0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x56,
	0x32, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x48, 0x00, 0x52, 0x02, 0x76, 0x32, 0x12, 0x36, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x47,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x12, 0x36,
	0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x36, 0x0a, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x22, 0xc2, 0x03, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x03, 0x68, 0x75, 0x62, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x48, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x03, 0x68, 0x75, 0x62, 0x12,
	0x2a, 0x0a, 0x02, 0x76, 0x32, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x56, 0x32, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x02, 0x76, 0x32, 0x12, 0x36, 0x0a, 0x06, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x47, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x12, 0x36, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0xcb, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x48, 0x00, 0x52, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x36, 0x0a, 0x06, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xcf, 0x03, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x03, 0x68, 0x75, 0x62, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x48, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x03, 0x68, 0x75,
	0x62, 0x12, 0x2a, 0x0a, 0x02, 0x76, 0x32, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x56, 0x32, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x02, 0x76, 0x32, 0x12, 0x36, 0x0a,
	0x06, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x47, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x12, 0x36, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18,
	0xcb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x47, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x36, 0x0a,
	0x06, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f,
	0x67, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x6c, 0x6f, 0x67, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x68, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x22, 0x8b, 0x01, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x22, 0xe1, 0x01, 0x0a, 0x0f, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x41,
	0x0a, 0x13, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xf6, 0x02, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0xe9, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x72, 0x75,
	0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x22, 0x84, 0x02, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xe9, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0xea,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x73, 0x22, 0x88, 0x02, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x11,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x19, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x73, 0x22, 0x50, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x54, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xda, 0x02,
	0x0a, 0x14, 0x50, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x01, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x11, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x15, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0xb7, 0x03, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x67,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x68, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x6b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe2, 0x04,
	0x0a, 0x13, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x67, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x68, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x69, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x35, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x05, 0x52, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe8,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa0, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x22, 0xb0, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x67, 0x0a, 0x13, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x10, 0x4e,
	0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x7c,
	0x0a, 0x1a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0xc3, 0x02, 0x0a,
	0x12, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x61, 0x67, 0x18, 0x6c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x61, 0x67, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x22, 0x72, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0xce, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x01, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x11, 0x0a, 0x03,
	0x6c, 0x6f, 0x67, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x48, 0x0a, 0x19, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x4e, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x29, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa9, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x22,
	0x83, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x01, 0x52, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x17, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3b, 0x0a,
	0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0xe8, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0xe9, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x18, 0xea, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x22, 0xfc,
	0x01, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xeb, 0x02,
	0x0a, 0x14, 0x50, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x01, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x02, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x31, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x16, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xf9, 0x02, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x6c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x3d, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x59, 0x0a, 0x1f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb4, 0x02, 0x0a, 0x1b,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75,
	0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x22, 0xa8, 0x03, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x38, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x35, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0xe8, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x6d, 0x0a,
	0x1d, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x27, 0x0a, 0x12,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x12, 0x11, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0xd7, 0x02, 0x0a, 0x17, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x03, 0x6c, 0x6f,
	0x67, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x47, 0x0a, 0x10, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xc9, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00,
	0x52, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x50, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x51, 0x0a, 0x1b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x6e, 0x0a, 0x1c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x46, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xeb, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x75,
	0x78, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xf8, 0x01, 0x0a, 0x1b, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xf1, 0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x34, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4b, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x75, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x75, 0x78, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2a, 0x41, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f,
	0x4c, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x10, 0x03, 0x2a, 0x40, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x40, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x58, 0x10, 0x02, 0x2a, 0x45, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a,
	0x5e, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x52, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x32,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x55, 0x42, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x47,
	0x49, 0x54, 0x4c, 0x41, 0x42, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x49, 0x54, 0x48, 0x55,
	0x42, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x05, 0x2a,
	0x77, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x50, 0x41,
	0x43, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x4e, 0x53, 0x5f, 0x4f, 0x52, 0x47, 0x41,
	0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x4e,
	0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x4e, 0x53, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4e, 0x53, 0x5f, 0x50,
	0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x04, 0x2a, 0x55, 0x0a, 0x14, 0x4e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x52, 0x45, 0x41, 0x43, 0x48, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a,
	0x36, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x4b, 0x38, 0x53, 0x10, 0x02, 0x2a, 0x79, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x1d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x4c, 0x4f, 0x47, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x03, 0x2a, 0x54, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x52, 0x44,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x54, 0x45, 0x41, 0x4d, 0x53, 0x10, 0x03, 0x2a, 0x8b, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x45, 0x50, 0x4c, 0x4f,
	0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x44, 0x44,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x5c, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x53, 0x52, 0x55, 0x50, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x4c, 0x10, 0x03, 0x32, 0xd0, 0x02, 0x0a, 0x0b, 0x43, 0x72, 0x75, 0x78, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x12, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x72, 0x75,
	0x78, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdc, 0x02, 0x0a, 0x0c, 0x43, 0x72, 0x75, 0x78,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb4, 0x05, 0x0a, 0x08, 0x43, 0x72, 0x75, 0x78, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x72, 0x75,
	0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x3c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12,
	0x1b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x0b, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x4d, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30,
	0x01, 0x12, 0x5a, 0x0a, 0x13, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x72, 0x75,
	0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x32, 0xdf, 0x03,
	0x0a, 0x12, 0x43, 0x72, 0x75, 0x78, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0f,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xf4, 0x02, 0x0a, 0x09, 0x43, 0x72, 0x75, 0x78, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x64, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x0a,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x72, 0x75,
	0x78, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x2b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xde, 0x06, 0x0a, 0x0e, 0x43, 0x72, 0x75, 0x78, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1d, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0f,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x72, 0x75,
	0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x12, 0x22, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x1f, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x32, 0xda, 0x05, 0x0a, 0x08, 0x43, 0x72, 0x75, 0x78,
	0x54, 0x65, 0x61, 0x6d, 0x12, 0x41, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x17, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13,
	0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x17, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x17, 0x2e, 0x63, 0x72, 0x75,
	0x78, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x13, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xbe, 0x03, 0x0a, 0x10, 0x43, 0x72, 0x75, 0x78, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x72, 0x75, 0x78,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x63, 0x72,
	0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x13, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x10, 0x54, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xa5, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x75, 0x78, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x12, 0x19, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x19, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63,
	0x72, 0x75, 0x78, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x3c, 0x0a,
	0x0a, 0x43, 0x72, 0x75, 0x78, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x09, 0x67,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x63, 0x72, 0x75, 0x78, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x34, 0x5a, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x79, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x64, 0x79, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x72, 0x75,
	0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_proto_crux_proto_rawDescOnce sync.Once
	file_protobuf_proto_crux_proto_rawDescData = file_protobuf_proto_crux_proto_rawDesc
)

func file_protobuf_proto_crux_proto_rawDescGZIP() []byte {
	file_protobuf_proto_crux_proto_rawDescOnce.Do(func() {
		file_protobuf_proto_crux_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_proto_crux_proto_rawDescData)
	})
	return file_protobuf_proto_crux_proto_rawDescData
}

var file_protobuf_proto_crux_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_protobuf_proto_crux_proto_msgTypes = make([]protoimpl.MessageInfo, 92)
var file_protobuf_proto_crux_proto_goTypes = []interface{}{
	(UserRole)(0),                           // 0: crux.UserRole
	(UserStatus)(0),                         // 1: crux.UserStatus
	(ProductType)(0),                        // 2: crux.ProductType
	(VersionType)(0),                        // 3: crux.VersionType
	(RegistryType)(0),                       // 4: crux.RegistryType
	(RegistryNamespace)(0),                  // 5: crux.RegistryNamespace
	(NodeConnectionStatus)(0),               // 6: crux.NodeConnectionStatus
	(NodeType)(0),                           // 7: crux.NodeType
	(DeploymentEventType)(0),                // 8: crux.DeploymentEventType
	(NotificationType)(0),                   // 9: crux.NotificationType
	(NotificationEventType)(0),              // 10: crux.NotificationEventType
	(ServiceStatus)(0),                      // 11: crux.ServiceStatus
	(*Empty)(nil),                           // 12: crux.Empty
	(*ServiceIdRequest)(nil),                // 13: crux.ServiceIdRequest
	(*IdRequest)(nil),                       // 14: crux.IdRequest
	(*AuditResponse)(nil),                   // 15: crux.AuditResponse
	(*CreateEntityResponse)(nil),            // 16: crux.CreateEntityResponse
	(*UpdateEntityResponse)(nil),            // 17: crux.UpdateEntityResponse
	(*AuditLogListRequest)(nil),             // 18: crux.AuditLogListRequest
	(*AuditLogListCountResponse)(nil),       // 19: crux.AuditLogListCountResponse
	(*AuditLogResponse)(nil),                // 20: crux.AuditLogResponse
	(*AuditLogListResponse)(nil),            // 21: crux.AuditLogListResponse
	(*CreateTeamRequest)(nil),               // 22: crux.CreateTeamRequest
	(*UpdateTeamRequest)(nil),               // 23: crux.UpdateTeamRequest
	(*UpdateUserRoleInTeamRequest)(nil),     // 24: crux.UpdateUserRoleInTeamRequest
	(*InviteUserRequest)(nil),               // 25: crux.InviteUserRequest
	(*DeleteUserFromTeamRequest)(nil),       // 26: crux.DeleteUserFromTeamRequest
	(*AccessRequest)(nil),                   // 27: crux.AccessRequest
	(*UserMetaResponse)(nil),                // 28: crux.UserMetaResponse
	(*ActiveTeamUser)(nil),                  // 29: crux.ActiveTeamUser
	(*TeamResponse)(nil),                    // 30: crux.TeamResponse
	(*ActiveTeamDetailsResponse)(nil),       // 31: crux.ActiveTeamDetailsResponse
	(*TeamStatistics)(nil),                  // 32: crux.TeamStatistics
	(*TeamWithStatsResponse)(nil),           // 33: crux.TeamWithStatsResponse
	(*TeamDetailsResponse)(nil),             // 34: crux.TeamDetailsResponse
	(*AllTeamsResponse)(nil),                // 35: crux.AllTeamsResponse
	(*UserResponse)(nil),                    // 36: crux.UserResponse
	(*ProductDetailsReponse)(nil),           // 37: crux.ProductDetailsReponse
	(*ProductReponse)(nil),                  // 38: crux.ProductReponse
	(*ProductListResponse)(nil),             // 39: crux.ProductListResponse
	(*CreateProductRequest)(nil),            // 40: crux.CreateProductRequest
	(*UpdateProductRequest)(nil),            // 41: crux.UpdateProductRequest
	(*RegistryResponse)(nil),                // 42: crux.RegistryResponse
	(*RegistryListResponse)(nil),            // 43: crux.RegistryListResponse
	(*HubRegistryDetails)(nil),              // 44: crux.HubRegistryDetails
	(*V2RegistryDetails)(nil),               // 45: crux.V2RegistryDetails
	(*GitlabRegistryDetails)(nil),           // 46: crux.GitlabRegistryDetails
	(*GithubRegistryDetails)(nil),           // 47: crux.GithubRegistryDetails
	(*GoogleRegistryDetails)(nil),           // 48: crux.GoogleRegistryDetails
	(*CreateRegistryRequest)(nil),           // 49: crux.CreateRegistryRequest
	(*UpdateRegistryRequest)(nil),           // 50: crux.UpdateRegistryRequest
	(*RegistryDetailsResponse)(nil),         // 51: crux.RegistryDetailsResponse
	(*CreateVersionRequest)(nil),            // 52: crux.CreateVersionRequest
	(*UpdateVersionRequest)(nil),            // 53: crux.UpdateVersionRequest
	(*VersionResponse)(nil),                 // 54: crux.VersionResponse
	(*VersionListResponse)(nil),             // 55: crux.VersionListResponse
	(*VersionDetailsResponse)(nil),          // 56: crux.VersionDetailsResponse
	(*IncreaseVersionRequest)(nil),          // 57: crux.IncreaseVersionRequest
	(*ContainerConfig)(nil),                 // 58: crux.ContainerConfig
	(*ImageResponse)(nil),                   // 59: crux.ImageResponse
	(*ImageListResponse)(nil),               // 60: crux.ImageListResponse
	(*OrderVersionImagesRequest)(nil),       // 61: crux.OrderVersionImagesRequest
	(*RegistryImages)(nil),                  // 62: crux.RegistryImages
	(*AddImagesToVersionRequest)(nil),       // 63: crux.AddImagesToVersionRequest
	(*PatchContainerConfig)(nil),            // 64: crux.PatchContainerConfig
	(*PatchImageRequest)(nil),               // 65: crux.PatchImageRequest
	(*NodeResponse)(nil),                    // 66: crux.NodeResponse
	(*NodeDetailsResponse)(nil),             // 67: crux.NodeDetailsResponse
	(*NodeListResponse)(nil),                // 68: crux.NodeListResponse
	(*CreateNodeRequest)(nil),               // 69: crux.CreateNodeRequest
	(*UpdateNodeRequest)(nil),               // 70: crux.UpdateNodeRequest
	(*GenerateScriptRequest)(nil),           // 71: crux.GenerateScriptRequest
	(*NodeInstallResponse)(nil),             // 72: crux.NodeInstallResponse
	(*NodeScriptResponse)(nil),              // 73: crux.NodeScriptResponse
	(*NodeEventMessage)(nil),                // 74: crux.NodeEventMessage
	(*WatchContainerStateRequest)(nil),      // 75: crux.WatchContainerStateRequest
	(*ContainerStateItem)(nil),              // 76: crux.ContainerStateItem
	(*ContainerStateListMessage)(nil),       // 77: crux.ContainerStateListMessage
	(*DeploymentProgressMessage)(nil),       // 78: crux.DeploymentProgressMessage
	(*InstancesCreatedEventList)(nil),       // 79: crux.InstancesCreatedEventList
	(*DeploymentEditEventMessage)(nil),      // 80: crux.DeploymentEditEventMessage
	(*CreateDeploymentRequest)(nil),         // 81: crux.CreateDeploymentRequest
	(*UpdateDeploymentRequest)(nil),         // 82: crux.UpdateDeploymentRequest
	(*PatchDeploymentRequest)(nil),          // 83: crux.PatchDeploymentRequest
	(*InstanceContainerConfig)(nil),         // 84: crux.InstanceContainerConfig
	(*InstanceResponse)(nil),                // 85: crux.InstanceResponse
	(*PatchInstanceRequest)(nil),            // 86: crux.PatchInstanceRequest
	(*DeploymentListResponse)(nil),          // 87: crux.DeploymentListResponse
	(*DeploymentResponse)(nil),              // 88: crux.DeploymentResponse
	(*DeploymentListByVersionResponse)(nil), // 89: crux.DeploymentListByVersionResponse
	(*DeploymentByVersionResponse)(nil),     // 90: crux.DeploymentByVersionResponse
	(*DeploymentDetailsResponse)(nil),       // 91: crux.DeploymentDetailsResponse
	(*DeploymentEventContainerState)(nil),   // 92: crux.DeploymentEventContainerState
	(*DeploymentEventLog)(nil),              // 93: crux.DeploymentEventLog
	(*DeploymentEventResponse)(nil),         // 94: crux.DeploymentEventResponse
	(*DeploymentEventListResponse)(nil),     // 95: crux.DeploymentEventListResponse
	(*DeploymentListSecretsRequest)(nil),    // 96: crux.DeploymentListSecretsRequest
	(*CreateNotificationRequest)(nil),       // 97: crux.CreateNotificationRequest
	(*CreateNotificationResponse)(nil),      // 98: crux.CreateNotificationResponse
	(*UpdateNotificationRequest)(nil),       // 99: crux.UpdateNotificationRequest
	(*NotificationDetailsResponse)(nil),     // 100: crux.NotificationDetailsResponse
	(*NotificationResponse)(nil),            // 101: crux.NotificationResponse
	(*NotificationListResponse)(nil),        // 102: crux.NotificationListResponse
	(*HealthResponse)(nil),                  // 103: crux.HealthResponse
	(*timestamppb.Timestamp)(nil),           // 104: google.protobuf.Timestamp
	(*common.ExplicitContainerConfig)(nil),  // 105: common.ExplicitContainerConfig
	(*common.UniqueKeyValue)(nil),           // 106: common.UniqueKeyValue
	(*common.UniqueKey)(nil),                // 107: common.UniqueKey
	(*common.KeyValueList)(nil),             // 108: common.KeyValueList
	(*common.KeyList)(nil),                  // 109: common.KeyList
	(common.ContainerState)(0),              // 110: common.ContainerState
	(*common.Port)(nil),                     // 111: common.Port
	(common.DeploymentStatus)(0),            // 112: common.DeploymentStatus
	(*common.InstanceDeploymentItem)(nil),   // 113: common.InstanceDeploymentItem
	(*common.UniqueKeySecretValue)(nil),     // 114: common.UniqueKeySecretValue
	(*common.SecretList)(nil),               // 115: common.SecretList
	(*common.ListSecretsResponse)(nil),      // 116: common.ListSecretsResponse
}
var file_protobuf_proto_crux_proto_depIdxs = []int32{
	104, // 0: crux.AuditResponse.createdAt:type_name -> google.protobuf.Timestamp
	104, // 1: crux.AuditResponse.updatedAt:type_name -> google.protobuf.Timestamp
	104, // 2: crux.CreateEntityResponse.createdAt:type_name -> google.protobuf.Timestamp
	104, // 3: crux.UpdateEntityResponse.updatedAt:type_name -> google.protobuf.Timestamp
	104, // 4: crux.AuditLogListRequest.createdFrom:type_name -> google.protobuf.Timestamp
	104, // 5: crux.AuditLogListRequest.createdTo:type_name -> google.protobuf.Timestamp
	104, // 6: crux.AuditLogResponse.createdAt:type_name -> google.protobuf.Timestamp
	20,  // 7: crux.AuditLogListResponse.data:type_name -> crux.AuditLogResponse
	0,   // 8: crux.UpdateUserRoleInTeamRequest.role:type_name -> crux.UserRole
	29,  // 9: crux.UserMetaResponse.user:type_name -> crux.ActiveTeamUser
	30,  // 10: crux.UserMetaResponse.teams:type_name -> crux.TeamResponse
	30,  // 11: crux.UserMetaResponse.invitations:type_name -> crux.TeamResponse
	0,   // 12: crux.ActiveTeamUser.role:type_name -> crux.UserRole
	1,   // 13: crux.ActiveTeamUser.status:type_name -> crux.UserStatus
	36,  // 14: crux.ActiveTeamDetailsResponse.users:type_name -> crux.UserResponse
	32,  // 15: crux.TeamWithStatsResponse.statistics:type_name -> crux.TeamStatistics
	32,  // 16: crux.TeamDetailsResponse.statistics:type_name -> crux.TeamStatistics
	36,  // 17: crux.TeamDetailsResponse.users:type_name -> crux.UserResponse
	33,  // 18: crux.AllTeamsResponse.data:type_name -> crux.TeamWithStatsResponse
	0,   // 19: crux.UserResponse.role:type_name -> crux.UserRole
	1,   // 20: crux.UserResponse.status:type_name -> crux.UserStatus
	104, // 21: crux.UserResponse.lastLogin:type_name -> google.protobuf.Timestamp
	15,  // 22: crux.ProductDetailsReponse.audit:type_name -> crux.AuditResponse
	2,   // 23: crux.ProductDetailsReponse.type:type_name -> crux.ProductType
	54,  // 24: crux.ProductDetailsReponse.versions:type_name -> crux.VersionResponse
	15,  // 25: crux.ProductReponse.audit:type_name -> crux.AuditResponse
	2,   // 26: crux.ProductReponse.type:type_name -> crux.ProductType
	38,  // 27: crux.ProductListResponse.data:type_name -> crux.ProductReponse
	2,   // 28: crux.CreateProductRequest.type:type_name -> crux.ProductType
	15,  // 29: crux.RegistryResponse.audit:type_name -> crux.AuditResponse
	4,   // 30: crux.RegistryResponse.type:type_name -> crux.RegistryType
	42,  // 31: crux.RegistryListResponse.data:type_name -> crux.RegistryResponse
	5,   // 32: crux.GitlabRegistryDetails.namespace:type_name -> crux.RegistryNamespace
	5,   // 33: crux.GithubRegistryDetails.namespace:type_name -> crux.RegistryNamespace
	44,  // 34: crux.CreateRegistryRequest.hub:type_name -> crux.HubRegistryDetails
	45,  // 35: crux.CreateRegistryRequest.v2:type_name -> crux.V2RegistryDetails
	46,  // 36: crux.CreateRegistryRequest.gitlab:type_name -> crux.GitlabRegistryDetails
	47,  // 37: crux.CreateRegistryRequest.github:type_name -> crux.GithubRegistryDetails
	48,  // 38: crux.CreateRegistryRequest.google:type_name -> crux.GoogleRegistryDetails
	44,  // 39: crux.UpdateRegistryRequest.hub:type_name -> crux.HubRegistryDetails
	45,  // 40: crux.UpdateRegistryRequest.v2:type_name -> crux.V2RegistryDetails
	46,  // 41: crux.UpdateRegistryRequest.gitlab:type_name -> crux.GitlabRegistryDetails
	47,  // 42: crux.UpdateRegistryRequest.github:type_name -> crux.GithubRegistryDetails
	48,  // 43: crux.UpdateRegistryRequest.google:type_name -> crux.GoogleRegistryDetails
	15,  // 44: crux.RegistryDetailsResponse.audit:type_name -> crux.AuditResponse
	44,  // 45: crux.RegistryDetailsResponse.hub:type_name -> crux.HubRegistryDetails
	45,  // 46: crux.RegistryDetailsResponse.v2:type_name -> crux.V2RegistryDetails
	46,  // 47: crux.RegistryDetailsResponse.gitlab:type_name -> crux.GitlabRegistryDetails
	47,  // 48: crux.RegistryDetailsResponse.github:type_name -> crux.GithubRegistryDetails
	48,  // 49: crux.RegistryDetailsResponse.google:type_name -> crux.GoogleRegistryDetails
	3,   // 50: crux.CreateVersionRequest.type:type_name -> crux.VersionType
	15,  // 51: crux.VersionResponse.audit:type_name -> crux.AuditResponse
	3,   // 52: crux.VersionResponse.type:type_name -> crux.VersionType
	54,  // 53: crux.VersionListResponse.data:type_name -> crux.VersionResponse
	15,  // 54: crux.VersionDetailsResponse.audit:type_name -> crux.AuditResponse
	3,   // 55: crux.VersionDetailsResponse.type:type_name -> crux.VersionType
	59,  // 56: crux.VersionDetailsResponse.images:type_name -> crux.ImageResponse
	90,  // 57: crux.VersionDetailsResponse.deployments:type_name -> crux.DeploymentByVersionResponse
	105, // 58: crux.ContainerConfig.config:type_name -> common.ExplicitContainerConfig
	106, // 59: crux.ContainerConfig.capabilities:type_name -> common.UniqueKeyValue
	106, // 60: crux.ContainerConfig.environment:type_name -> common.UniqueKeyValue
	107, // 61: crux.ContainerConfig.secrets:type_name -> common.UniqueKey
	58,  // 62: crux.ImageResponse.config:type_name -> crux.ContainerConfig
	104, // 63: crux.ImageResponse.createdAt:type_name -> google.protobuf.Timestamp
	59,  // 64: crux.ImageListResponse.data:type_name -> crux.ImageResponse
	62,  // 65: crux.AddImagesToVersionRequest.images:type_name -> crux.RegistryImages
	108, // 66: crux.PatchContainerConfig.capabilities:type_name -> common.KeyValueList
	108, // 67: crux.PatchContainerConfig.environment:type_name -> common.KeyValueList
	109, // 68: crux.PatchContainerConfig.secrets:type_name -> common.KeyList
	105, // 69: crux.PatchContainerConfig.config:type_name -> common.ExplicitContainerConfig
	64,  // 70: crux.PatchImageRequest.config:type_name -> crux.PatchContainerConfig
	15,  // 71: crux.NodeResponse.audit:type_name -> crux.AuditResponse
	6,   // 72: crux.NodeResponse.status:type_name -> crux.NodeConnectionStatus
	104, // 73: crux.NodeResponse.connectedAt:type_name -> google.protobuf.Timestamp
	7,   // 74: crux.NodeResponse.type:type_name -> crux.NodeType
	15,  // 75: crux.NodeDetailsResponse.audit:type_name -> crux.AuditResponse
	6,   // 76: crux.NodeDetailsResponse.status:type_name -> crux.NodeConnectionStatus
	104, // 77: crux.NodeDetailsResponse.connectedAt:type_name -> google.protobuf.Timestamp
	72,  // 78: crux.NodeDetailsResponse.install:type_name -> crux.NodeInstallResponse
	73,  // 79: crux.NodeDetailsResponse.script:type_name -> crux.NodeScriptResponse
	7,   // 80: crux.NodeDetailsResponse.type:type_name -> crux.NodeType
	66,  // 81: crux.NodeListResponse.data:type_name -> crux.NodeResponse
	7,   // 82: crux.GenerateScriptRequest.type:type_name -> crux.NodeType
	104, // 83: crux.NodeInstallResponse.expireAt:type_name -> google.protobuf.Timestamp
	6,   // 84: crux.NodeEventMessage.status:type_name -> crux.NodeConnectionStatus
	104, // 85: crux.ContainerStateItem.createdAt:type_name -> google.protobuf.Timestamp
	110, // 86: crux.ContainerStateItem.state:type_name -> common.ContainerState
	111, // 87: crux.ContainerStateItem.ports:type_name -> common.Port
	76,  // 88: crux.ContainerStateListMessage.data:type_name -> crux.ContainerStateItem
	112, // 89: crux.DeploymentProgressMessage.status:type_name -> common.DeploymentStatus
	113, // 90: crux.DeploymentProgressMessage.instance:type_name -> common.InstanceDeploymentItem
	85,  // 91: crux.InstancesCreatedEventList.data:type_name -> crux.InstanceResponse
	79,  // 92: crux.DeploymentEditEventMessage.instancesCreated:type_name -> crux.InstancesCreatedEventList
	108, // 93: crux.PatchDeploymentRequest.environment:type_name -> common.KeyValueList
	86,  // 94: crux.PatchDeploymentRequest.instance:type_name -> crux.PatchInstanceRequest
	105, // 95: crux.InstanceContainerConfig.config:type_name -> common.ExplicitContainerConfig
	106, // 96: crux.InstanceContainerConfig.capabilities:type_name -> common.UniqueKeyValue
	106, // 97: crux.InstanceContainerConfig.environment:type_name -> common.UniqueKeyValue
	114, // 98: crux.InstanceContainerConfig.secrets:type_name -> common.UniqueKeySecretValue
	15,  // 99: crux.InstanceResponse.audit:type_name -> crux.AuditResponse
	59,  // 100: crux.InstanceResponse.image:type_name -> crux.ImageResponse
	110, // 101: crux.InstanceResponse.state:type_name -> common.ContainerState
	84,  // 102: crux.InstanceResponse.config:type_name -> crux.InstanceContainerConfig
	108, // 103: crux.PatchInstanceRequest.environment:type_name -> common.KeyValueList
	108, // 104: crux.PatchInstanceRequest.capabilities:type_name -> common.KeyValueList
	105, // 105: crux.PatchInstanceRequest.config:type_name -> common.ExplicitContainerConfig
	115, // 106: crux.PatchInstanceRequest.secrets:type_name -> common.SecretList
	88,  // 107: crux.DeploymentListResponse.data:type_name -> crux.DeploymentResponse
	112, // 108: crux.DeploymentResponse.status:type_name -> common.DeploymentStatus
	104, // 109: crux.DeploymentResponse.updatedAt:type_name -> google.protobuf.Timestamp
	90,  // 110: crux.DeploymentListByVersionResponse.data:type_name -> crux.DeploymentByVersionResponse
	15,  // 111: crux.DeploymentByVersionResponse.audit:type_name -> crux.AuditResponse
	112, // 112: crux.DeploymentByVersionResponse.status:type_name -> common.DeploymentStatus
	6,   // 113: crux.DeploymentByVersionResponse.nodeStatus:type_name -> crux.NodeConnectionStatus
	15,  // 114: crux.DeploymentDetailsResponse.audit:type_name -> crux.AuditResponse
	106, // 115: crux.DeploymentDetailsResponse.environment:type_name -> common.UniqueKeyValue
	112, // 116: crux.DeploymentDetailsResponse.status:type_name -> common.DeploymentStatus
	85,  // 117: crux.DeploymentDetailsResponse.instances:type_name -> crux.InstanceResponse
	110, // 118: crux.DeploymentEventContainerState.state:type_name -> common.ContainerState
	8,   // 119: crux.DeploymentEventResponse.type:type_name -> crux.DeploymentEventType
	104, // 120: crux.DeploymentEventResponse.createdAt:type_name -> google.protobuf.Timestamp
	93,  // 121: crux.DeploymentEventResponse.log:type_name -> crux.DeploymentEventLog
	112, // 122: crux.DeploymentEventResponse.deploymentStatus:type_name -> common.DeploymentStatus
	92,  // 123: crux.DeploymentEventResponse.containerStatus:type_name -> crux.DeploymentEventContainerState
	94,  // 124: crux.DeploymentEventListResponse.data:type_name -> crux.DeploymentEventResponse
	9,   // 125: crux.CreateNotificationRequest.type:type_name -> crux.NotificationType
	10,  // 126: crux.CreateNotificationRequest.events:type_name -> crux.NotificationEventType
	9,   // 127: crux.UpdateNotificationRequest.type:type_name -> crux.NotificationType
	10,  // 128: crux.UpdateNotificationRequest.events:type_name -> crux.NotificationEventType
	15,  // 129: crux.NotificationDetailsResponse.audit:type_name -> crux.AuditResponse
	9,   // 130: crux.NotificationDetailsResponse.type:type_name -> crux.NotificationType
	10,  // 131: crux.NotificationDetailsResponse.events:type_name -> crux.NotificationEventType
	15,  // 132: crux.NotificationResponse.audit:type_name -> crux.AuditResponse
	9,   // 133: crux.NotificationResponse.type:type_name -> crux.NotificationType
	10,  // 134: crux.NotificationResponse.events:type_name -> crux.NotificationEventType
	101, // 135: crux.NotificationListResponse.data:type_name -> crux.NotificationResponse
	11,  // 136: crux.HealthResponse.status:type_name -> crux.ServiceStatus
	27,  // 137: crux.CruxProduct.GetProducts:input_type -> crux.AccessRequest
	40,  // 138: crux.CruxProduct.CreateProduct:input_type -> crux.CreateProductRequest
	41,  // 139: crux.CruxProduct.UpdateProduct:input_type -> crux.UpdateProductRequest
	14,  // 140: crux.CruxProduct.DeleteProduct:input_type -> crux.IdRequest
	14,  // 141: crux.CruxProduct.GetProductDetails:input_type -> crux.IdRequest
	27,  // 142: crux.CruxRegistry.GetRegistries:input_type -> crux.AccessRequest
	49,  // 143: crux.CruxRegistry.CreateRegistry:input_type -> crux.CreateRegistryRequest
	50,  // 144: crux.CruxRegistry.UpdateRegistry:input_type -> crux.UpdateRegistryRequest
	14,  // 145: crux.CruxRegistry.DeleteRegistry:input_type -> crux.IdRequest
	14,  // 146: crux.CruxRegistry.GetRegistryDetails:input_type -> crux.IdRequest
	27,  // 147: crux.CruxNode.GetNodes:input_type -> crux.AccessRequest
	69,  // 148: crux.CruxNode.CreateNode:input_type -> crux.CreateNodeRequest
	70,  // 149: crux.CruxNode.UpdateNode:input_type -> crux.UpdateNodeRequest
	14,  // 150: crux.CruxNode.DeleteNode:input_type -> crux.IdRequest
	14,  // 151: crux.CruxNode.GetNodeDetails:input_type -> crux.IdRequest
	71,  // 152: crux.CruxNode.GenerateScript:input_type -> crux.GenerateScriptRequest
	13,  // 153: crux.CruxNode.GetScript:input_type -> crux.ServiceIdRequest
	14,  // 154: crux.CruxNode.DiscardScript:input_type -> crux.IdRequest
	14,  // 155: crux.CruxNode.RevokeToken:input_type -> crux.IdRequest
	13,  // 156: crux.CruxNode.SubscribeNodeEventChannel:input_type -> crux.ServiceIdRequest
	75,  // 157: crux.CruxNode.WatchContainerState:input_type -> crux.WatchContainerStateRequest
	14,  // 158: crux.CruxProductVersion.GetVersionsByProductId:input_type -> crux.IdRequest
	52,  // 159: crux.CruxProductVersion.CreateVersion:input_type -> crux.CreateVersionRequest
	53,  // 160: crux.CruxProductVersion.UpdateVersion:input_type -> crux.UpdateVersionRequest
	14,  // 161: crux.CruxProductVersion.DeleteVersion:input_type -> crux.IdRequest
	14,  // 162: crux.CruxProductVersion.SetDefaultVersion:input_type -> crux.IdRequest
	14,  // 163: crux.CruxProductVersion.GetVersionDetails:input_type -> crux.IdRequest
	57,  // 164: crux.CruxProductVersion.IncreaseVersion:input_type -> crux.IncreaseVersionRequest
	14,  // 165: crux.CruxImage.GetImagesByVersionId:input_type -> crux.IdRequest
	63,  // 166: crux.CruxImage.AddImagesToVersion:input_type -> crux.AddImagesToVersionRequest
	61,  // 167: crux.CruxImage.OrderImages:input_type -> crux.OrderVersionImagesRequest
	65,  // 168: crux.CruxImage.PatchImage:input_type -> crux.PatchImageRequest
	14,  // 169: crux.CruxImage.DeleteImage:input_type -> crux.IdRequest
	14,  // 170: crux.CruxImage.GetImageDetails:input_type -> crux.IdRequest
	14,  // 171: crux.CruxDeployment.GetDeploymentsByVersionId:input_type -> crux.IdRequest
	81,  // 172: crux.CruxDeployment.CreateDeployment:input_type -> crux.CreateDeploymentRequest
	82,  // 173: crux.CruxDeployment.UpdateDeployment:input_type -> crux.UpdateDeploymentRequest
	83,  // 174: crux.CruxDeployment.PatchDeployment:input_type -> crux.PatchDeploymentRequest
	14,  // 175: crux.CruxDeployment.DeleteDeployment:input_type -> crux.IdRequest
	14,  // 176: crux.CruxDeployment.GetDeploymentDetails:input_type -> crux.IdRequest
	14,  // 177: crux.CruxDeployment.GetDeploymentEvents:input_type -> crux.IdRequest
	27,  // 178: crux.CruxDeployment.GetDeploymentList:input_type -> crux.AccessRequest
	96,  // 179: crux.CruxDeployment.GetDeploymentSecrets:input_type -> crux.DeploymentListSecretsRequest
	14,  // 180: crux.CruxDeployment.StartDeployment:input_type -> crux.IdRequest
	13,  // 181: crux.CruxDeployment.SubscribeToDeploymentEditEvents:input_type -> crux.ServiceIdRequest
	22,  // 182: crux.CruxTeam.CreateTeam:input_type -> crux.CreateTeamRequest
	27,  // 183: crux.CruxTeam.GetActiveTeamByUser:input_type -> crux.AccessRequest
	23,  // 184: crux.CruxTeam.UpdateTeam:input_type -> crux.UpdateTeamRequest
	14,  // 185: crux.CruxTeam.DeleteTeam:input_type -> crux.IdRequest
	24,  // 186: crux.CruxTeam.UpdateUserRole:input_type -> crux.UpdateUserRoleInTeamRequest
	25,  // 187: crux.CruxTeam.InviteUserToTeam:input_type -> crux.InviteUserRequest
	26,  // 188: crux.CruxTeam.DeleteUserFromTeam:input_type -> crux.DeleteUserFromTeamRequest
	14,  // 189: crux.CruxTeam.AcceptTeamInvite:input_type -> crux.IdRequest
	14,  // 190: crux.CruxTeam.SelectTeam:input_type -> crux.IdRequest
	27,  // 191: crux.CruxTeam.GetUserMeta:input_type -> crux.AccessRequest
	27,  // 192: crux.CruxTeam.GetAllTeams:input_type -> crux.AccessRequest
	14,  // 193: crux.CruxTeam.GetTeamById:input_type -> crux.IdRequest
	97,  // 194: crux.CruxNotification.CreateNotification:input_type -> crux.CreateNotificationRequest
	99,  // 195: crux.CruxNotification.UpdateNotification:input_type -> crux.UpdateNotificationRequest
	14,  // 196: crux.CruxNotification.DeleteNotification:input_type -> crux.IdRequest
	27,  // 197: crux.CruxNotification.GetNotificationList:input_type -> crux.AccessRequest
	14,  // 198: crux.CruxNotification.GetNotificationDetails:input_type -> crux.IdRequest
	14,  // 199: crux.CruxNotification.TestNotification:input_type -> crux.IdRequest
	18,  // 200: crux.CruxAudit.GetAuditLog:input_type -> crux.AuditLogListRequest
	18,  // 201: crux.CruxAudit.GetAuditLogListCount:input_type -> crux.AuditLogListRequest
	12,  // 202: crux.CruxHealth.getHealth:input_type -> crux.Empty
	39,  // 203: crux.CruxProduct.GetProducts:output_type -> crux.ProductListResponse
	16,  // 204: crux.CruxProduct.CreateProduct:output_type -> crux.CreateEntityResponse
	17,  // 205: crux.CruxProduct.UpdateProduct:output_type -> crux.UpdateEntityResponse
	12,  // 206: crux.CruxProduct.DeleteProduct:output_type -> crux.Empty
	37,  // 207: crux.CruxProduct.GetProductDetails:output_type -> crux.ProductDetailsReponse
	43,  // 208: crux.CruxRegistry.GetRegistries:output_type -> crux.RegistryListResponse
	16,  // 209: crux.CruxRegistry.CreateRegistry:output_type -> crux.CreateEntityResponse
	17,  // 210: crux.CruxRegistry.UpdateRegistry:output_type -> crux.UpdateEntityResponse
	12,  // 211: crux.CruxRegistry.DeleteRegistry:output_type -> crux.Empty
	51,  // 212: crux.CruxRegistry.GetRegistryDetails:output_type -> crux.RegistryDetailsResponse
	68,  // 213: crux.CruxNode.GetNodes:output_type -> crux.NodeListResponse
	16,  // 214: crux.CruxNode.CreateNode:output_type -> crux.CreateEntityResponse
	12,  // 215: crux.CruxNode.UpdateNode:output_type -> crux.Empty
	12,  // 216: crux.CruxNode.DeleteNode:output_type -> crux.Empty
	67,  // 217: crux.CruxNode.GetNodeDetails:output_type -> crux.NodeDetailsResponse
	72,  // 218: crux.CruxNode.GenerateScript:output_type -> crux.NodeInstallResponse
	73,  // 219: crux.CruxNode.GetScript:output_type -> crux.NodeScriptResponse
	12,  // 220: crux.CruxNode.DiscardScript:output_type -> crux.Empty
	12,  // 221: crux.CruxNode.RevokeToken:output_type -> crux.Empty
	74,  // 222: crux.CruxNode.SubscribeNodeEventChannel:output_type -> crux.NodeEventMessage
	77,  // 223: crux.CruxNode.WatchContainerState:output_type -> crux.ContainerStateListMessage
	55,  // 224: crux.CruxProductVersion.GetVersionsByProductId:output_type -> crux.VersionListResponse
	16,  // 225: crux.CruxProductVersion.CreateVersion:output_type -> crux.CreateEntityResponse
	17,  // 226: crux.CruxProductVersion.UpdateVersion:output_type -> crux.UpdateEntityResponse
	12,  // 227: crux.CruxProductVersion.DeleteVersion:output_type -> crux.Empty
	12,  // 228: crux.CruxProductVersion.SetDefaultVersion:output_type -> crux.Empty
	56,  // 229: crux.CruxProductVersion.GetVersionDetails:output_type -> crux.VersionDetailsResponse
	16,  // 230: crux.CruxProductVersion.IncreaseVersion:output_type -> crux.CreateEntityResponse
	60,  // 231: crux.CruxImage.GetImagesByVersionId:output_type -> crux.ImageListResponse
	60,  // 232: crux.CruxImage.AddImagesToVersion:output_type -> crux.ImageListResponse
	12,  // 233: crux.CruxImage.OrderImages:output_type -> crux.Empty
	12,  // 234: crux.CruxImage.PatchImage:output_type -> crux.Empty
	12,  // 235: crux.CruxImage.DeleteImage:output_type -> crux.Empty
	59,  // 236: crux.CruxImage.GetImageDetails:output_type -> crux.ImageResponse
	89,  // 237: crux.CruxDeployment.GetDeploymentsByVersionId:output_type -> crux.DeploymentListByVersionResponse
	16,  // 238: crux.CruxDeployment.CreateDeployment:output_type -> crux.CreateEntityResponse
	17,  // 239: crux.CruxDeployment.UpdateDeployment:output_type -> crux.UpdateEntityResponse
	17,  // 240: crux.CruxDeployment.PatchDeployment:output_type -> crux.UpdateEntityResponse
	12,  // 241: crux.CruxDeployment.DeleteDeployment:output_type -> crux.Empty
	91,  // 242: crux.CruxDeployment.GetDeploymentDetails:output_type -> crux.DeploymentDetailsResponse
	95,  // 243: crux.CruxDeployment.GetDeploymentEvents:output_type -> crux.DeploymentEventListResponse
	87,  // 244: crux.CruxDeployment.GetDeploymentList:output_type -> crux.DeploymentListResponse
	116, // 245: crux.CruxDeployment.GetDeploymentSecrets:output_type -> common.ListSecretsResponse
	78,  // 246: crux.CruxDeployment.StartDeployment:output_type -> crux.DeploymentProgressMessage
	80,  // 247: crux.CruxDeployment.SubscribeToDeploymentEditEvents:output_type -> crux.DeploymentEditEventMessage
	16,  // 248: crux.CruxTeam.CreateTeam:output_type -> crux.CreateEntityResponse
	31,  // 249: crux.CruxTeam.GetActiveTeamByUser:output_type -> crux.ActiveTeamDetailsResponse
	12,  // 250: crux.CruxTeam.UpdateTeam:output_type -> crux.Empty
	12,  // 251: crux.CruxTeam.DeleteTeam:output_type -> crux.Empty
	12,  // 252: crux.CruxTeam.UpdateUserRole:output_type -> crux.Empty
	16,  // 253: crux.CruxTeam.InviteUserToTeam:output_type -> crux.CreateEntityResponse
	12,  // 254: crux.CruxTeam.DeleteUserFromTeam:output_type -> crux.Empty
	12,  // 255: crux.CruxTeam.AcceptTeamInvite:output_type -> crux.Empty
	12,  // 256: crux.CruxTeam.SelectTeam:output_type -> crux.Empty
	28,  // 257: crux.CruxTeam.GetUserMeta:output_type -> crux.UserMetaResponse
	35,  // 258: crux.CruxTeam.GetAllTeams:output_type -> crux.AllTeamsResponse
	34,  // 259: crux.CruxTeam.GetTeamById:output_type -> crux.TeamDetailsResponse
	98,  // 260: crux.CruxNotification.CreateNotification:output_type -> crux.CreateNotificationResponse
	17,  // 261: crux.CruxNotification.UpdateNotification:output_type -> crux.UpdateEntityResponse
	12,  // 262: crux.CruxNotification.DeleteNotification:output_type -> crux.Empty
	102, // 263: crux.CruxNotification.GetNotificationList:output_type -> crux.NotificationListResponse
	100, // 264: crux.CruxNotification.GetNotificationDetails:output_type -> crux.NotificationDetailsResponse
	12,  // 265: crux.CruxNotification.TestNotification:output_type -> crux.Empty
	21,  // 266: crux.CruxAudit.GetAuditLog:output_type -> crux.AuditLogListResponse
	19,  // 267: crux.CruxAudit.GetAuditLogListCount:output_type -> crux.AuditLogListCountResponse
	103, // 268: crux.CruxHealth.getHealth:output_type -> crux.HealthResponse
	203, // [203:269] is the sub-list for method output_type
	137, // [137:203] is the sub-list for method input_type
	137, // [137:137] is the sub-list for extension type_name
	137, // [137:137] is the sub-list for extension extendee
	0,   // [0:137] is the sub-list for field type_name
}

func init() { file_protobuf_proto_crux_proto_init() }
func file_protobuf_proto_crux_proto_init() {
	if File_protobuf_proto_crux_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_proto_crux_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogListCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRoleInTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserFromTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveTeamUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveTeamDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamWithStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetailsReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HubRegistryDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V2RegistryDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitlabRegistryDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubRegistryDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleRegistryDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRegistryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegistryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncreaseVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderVersionImagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistryImages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddImagesToVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchContainerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchContainerStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerStateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerStateListMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentProgressMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstancesCreatedEventList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentEditEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceContainerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentListByVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentByVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentEventContainerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentEventLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentEventListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentListSecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_proto_crux_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protobuf_proto_crux_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*CreateRegistryRequest_Hub)(nil),
		(*CreateRegistryRequest_V2)(nil),
		(*CreateRegistryRequest_Gitlab)(nil),
		(*CreateRegistryRequest_Github)(nil),
		(*CreateRegistryRequest_Google)(nil),
	}
	file_protobuf_proto_crux_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*UpdateRegistryRequest_Hub)(nil),
		(*UpdateRegistryRequest_V2)(nil),
		(*UpdateRegistryRequest_Gitlab)(nil),
		(*UpdateRegistryRequest_Github)(nil),
		(*UpdateRegistryRequest_Google)(nil),
	}
	file_protobuf_proto_crux_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*RegistryDetailsResponse_Hub)(nil),
		(*RegistryDetailsResponse_V2)(nil),
		(*RegistryDetailsResponse_Gitlab)(nil),
		(*RegistryDetailsResponse_Github)(nil),
		(*RegistryDetailsResponse_Google)(nil),
	}
	file_protobuf_proto_crux_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[53].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[55].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[57].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[58].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[59].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[62].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[63].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[65].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[66].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[68].OneofWrappers = []interface{}{
		(*DeploymentEditEventMessage_InstancesCreated)(nil),
		(*DeploymentEditEventMessage_ImageIdDeleted)(nil),
	}
	file_protobuf_proto_crux_proto_msgTypes[69].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[70].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[71].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[73].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[74].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[76].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[78].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[79].OneofWrappers = []interface{}{}
	file_protobuf_proto_crux_proto_msgTypes[82].OneofWrappers = []interface{}{
		(*DeploymentEventResponse_Log)(nil),
		(*DeploymentEventResponse_DeploymentStatus)(nil),
		(*DeploymentEventResponse_ContainerStatus)(nil),
	}
	file_protobuf_proto_crux_proto_msgTypes[91].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_proto_crux_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   92,
			NumExtensions: 0,
			NumServices:   10,
		},
		GoTypes:           file_protobuf_proto_crux_proto_goTypes,
		DependencyIndexes: file_protobuf_proto_crux_proto_depIdxs,
		EnumInfos:         file_protobuf_proto_crux_proto_enumTypes,
		MessageInfos:      file_protobuf_proto_crux_proto_msgTypes,
	}.Build()
	File_protobuf_proto_crux_proto = out.File
	file_protobuf_proto_crux_proto_rawDesc = nil
	file_protobuf_proto_crux_proto_goTypes = nil
	file_protobuf_proto_crux_proto_depIdxs = nil
}
