# version is removed as per: https://github.com/docker/cli/pull/3445
services:
  # If you plan to deploy where a proxy is already in place, feel free to remove the traefik service
  traefik:
    image: docker.io/library/traefik:2.9
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # - "/run/podman/podman.sock:/var/run/docker.sock:ro"
    restart: unless-stopped

  crux:
    container_name: dyrectorio_crux
    image: ghcr.io/dyrector-io/dyrectorio/web/crux:latest
    command:
      - serve
    environment:
      - TZ=${TIMEZONE:-Europe/Budapest}
      - DATABASE_URL=postgresql://crux:${CRUX_POSTGRES_PASSWORD}@crux-postgres:5432/crux?schema=public
      - KRATOS_ADMIN_URL=http://kratos:4434
      - KRATOS_URL=http://kratos:4433
      - CRUX_UI_URL=https://${DOMAIN}
      - CRUX_AGENT_ADDRESS=${DOMAIN}:443
      - JWT_SECRET=${CRUX_SECRET}
      - FROM_NAME="${DOMAIN} - dyrector.io"
      - FROM_EMAIL=dyrectorio@${DOMAIN}
      - SMTP_URI=${SMTP_URI}
      # If you don't have a mailserver you can use the provided mailslurper
      # but keep in mind, this one is insecure, only use it at your own risk!
      # - SMTP_URI=smtps://test:test@mailslurper:1025/?skip_ssl_verify=true&legacy_ssl=true
    depends_on:
      crux-postgres:
        condition: service_healthy
      crux-migrate:
        condition: service_completed_successfully
      traefik:
        condition: service_started
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.crux.rule=(Host(`${DOMAIN}`) && Headers(`content-type`, `application/grpc`))
      - traefik.http.routers.crux.entrypoints=websecure
      - traefik.http.services.crux.loadbalancer.server.port=5000
      - traefik.http.services.crux.loadbalancer.server.scheme=h2c
      - traefik.http.routers.crux.tls=true
      - traefik.http.routers.crux.tls.domains[0].main=${DOMAIN}
      - traefik.http.routers.crux.tls.certresolver=letsencrypt
      - traefik.http.routers.crux-http.rule=Host(`${DOMAIN}`) && PathPrefix(`/api/new`)
      - traefik.http.routers.crux-http.entrypoints=web
      - traefik.http.services.crux-http.loadbalancer.server.port=1848
      - traefik.http.middlewares.crux-strip.stripprefix.prefixes=/api/new
      - traefik.http.routers.crux-http.middlewares=crux-strip
    # ports:
    #   - 1848:1848 # http API

  crux-migrate:
    image: ghcr.io/dyrector-io/dyrectorio/web/crux:latest
    command:
      - migrate
    environment:
      - TZ=${TIMEZONE:-Europe/Budapest}
      - DATABASE_URL=postgresql://crux:${CRUX_POSTGRES_PASSWORD}@crux-postgres:5432/crux?schema=public&connect_timeout=5
    depends_on:
      crux-postgres:
        condition: service_healthy
    restart: "no"

  crux-postgres:
    image: docker.io/library/postgres:13-alpine
    environment:
      - POSTGRES_PASSWORD=${CRUX_POSTGRES_PASSWORD}
      - POSTGRES_USER=crux
      - POSTGRES_DB=crux
    restart: unless-stopped
    volumes:
      - crux-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  crux-ui:
    image: ghcr.io/dyrector-io/dyrectorio/web/crux-ui:latest
    environment:
      - TZ=${TIMEZONE:-Europe/Budapest}
      - KRATOS_URL=http://kratos:4433
      - KRATOS_ADMIN_URL=http://kratos:4434
      - CRUX_API_ADDRESS=crux:5001
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - RECAPTCHA_SITE_KEY=${RECAPTCHA_SITE_KEY}
      # In case you don't want to use ReCAPTCHA
      # - DISABLE_RECAPTCHA=true
    depends_on:
      crux:
        condition: service_started
      traefik:
        condition: service_started
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.crux-ui.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.crux-ui.entrypoints=websecure
      - traefik.http.services.crux-ui.loadbalancer.server.port=3000
      - traefik.http.routers.crux-ui.tls=true
      - traefik.http.routers.crux-ui.tls.domains[0].main=${DOMAIN}
      - traefik.http.routers.crux-ui.tls.certresolver=letsencrypt

  kratos:
    image: ghcr.io/dyrector-io/dyrectorio/web/kratos:latest
    environment:
      - SQA_OPT_OUT=true
      - DSN=postgres://kratos:${KRATOS_POSTGRES_PASSWORD}@kratos-postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4&connect_timeout=5
      - KRATOS_URL=https://${DOMAIN}/kratos
      - KRATOS_ADMIN_URL=http://kratos:4434
      - AUTH_URL=https://${DOMAIN}/auth
      - CRUX_UI_URL=https://${DOMAIN}
      - LOG_LEVEL=info
      - LOG_LEAK_SENSITIVE_VALUES=false
      - SECRETS_COOKIE=${KRATOS_SECRET}
      - COURIER_SMTP_CONNECTION_URI=${SMTP_URI}
      # If you don't have a mailserver you can use the provided mailslurper
      # but keep in mind, this one is insecure, only use it at your own risk!
      # - COURIER_SMTP_CONNECTION_URI=smtps://test:test@mailslurper:1025/?skip_ssl_verify=true&legacy_ssl=true
    depends_on:
      kratos-postgres:
        condition: service_healthy
      kratos-migrate:
        condition: service_completed_successfully
      traefik:
        condition: service_started
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.kratos.rule=(Host(`${DOMAIN}`) && PathPrefix(`/kratos`))
      - traefik.http.routers.kratos.entrypoints=websecure
      - traefik.http.services.kratos.loadbalancer.server.port=4433
      - traefik.http.middlewares.kratos-strip.stripprefix.prefixes=/kratos
      - traefik.http.middlewares.kratos-ratelimit.ratelimit.average=100
      - traefik.http.routers.kratos.middlewares=kratos-strip,kratos-ratelimit
      - traefik.http.routers.kratos.tls=true
      - traefik.http.routers.kratos.tls.domains[0].main=${DOMAIN}
      - traefik.http.routers.kratos.tls.certresolver=letsencrypt

  kratos-migrate:
    image: ghcr.io/dyrector-io/dyrectorio/web/kratos:latest
    command: -c /etc/config/kratos/kratos.yaml migrate sql -e --yes
    environment:
      - SQA_OPT_OUT=true
      - DSN=postgres://kratos:${KRATOS_POSTGRES_PASSWORD}@kratos-postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    depends_on:
      kratos-postgres:
        condition: service_started
    restart: "no"

  kratos-postgres:
    container_name: dyrectorio_kratos_postgres
    image: docker.io/library/postgres:13-alpine
    environment:
      - POSTGRES_PASSWORD=${KRATOS_POSTGRES_PASSWORD}
      - POSTGRES_USER=kratos
      - POSTGRES_DB=kratos
    restart: unless-stopped
    volumes:
      - kratos-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # This is insecure, do not use this in production or on the public internet
  # mailslurper:
  #   image: docker.io/oryd/mailslurper:smtps-latest
  #   ports: # port 1025 is used internally for smtp, you do not have to expose that
  #     - 4436:4436 # web UI
  #     - 4437:4437 # http API
  #   restart: unless-stopped

volumes:
  letsencrypt:
  crux-db:
  kratos-db:
