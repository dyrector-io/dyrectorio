syntax = "proto3";

package common;
option go_package = "github.com/dyrector-io/dyrectorio/protobuf/go/common";

import "google/protobuf/timestamp.proto";

message Empty {}

// Deployment
enum ContainerState {
  UNKNOWN_CONTAINER_STATE = 0;
  CREATED = 1;
  RESTARTING = 2;
  RUNNING = 3;
  REMOVING = 4;
  PAUSED = 5;
  EXITED = 6;
  DEAD = 7;
}

enum DeploymentStatus {
  UNKNOWN_DEPLOYMENT_STATUS = 0;
  PREPARING = 1;
  IN_PROGRESS = 2;
  SUCCESSFUL = 3;
  FAILED = 4;
  OBSOLATE = 5;
  DOWNGRADED = 6;
}

message InstanceDeploymentItem {
  string instanceId = 100;
  ContainerState state = 101;
}

message DeploymentStatusMessage {
  oneof data {
    InstanceDeploymentItem instance = 200;
    DeploymentStatus deploymentStatus = 201;
  }

  repeated string log = 1000;
}

message ContainerStateItemPort {
  int32 internal = 100;
  int32 external = 101;
}

message ContainerStateListMessage {
  optional string prefix = 100;
  repeated common.ContainerStateItem data = 1000;
}

message ContainerStateItem {
  string containerId = 100;
  string name = 101;
  string command = 103;
  google.protobuf.Timestamp createdAt = 104;
  /* The 'State' of the container (Created, Running, etc) */
  ContainerState state = 105;
  /*
   * The 'Status' of the container ("Created 1min ago", "Exited with code 123",
   * etc). Unused but left here for reverse compatibility with the legacy
   * version.
   */
  string status = 106;
  string imageName = 107;
  string imageTag = 108;

  repeated ContainerStateItemPort ports = 1000;
}

enum NetworkMode {
  UNKNOWN_NETWORK_MODE = 0;
  BRIDGE = 1;
  HOST = 2;
  OVERLAY = 3;
  IPVLAN = 4;
  MACVLAN = 5;
  NONE = 6;
}

enum RestartPolicy {
  UNKNOWN_POLICY = 0;
  UNDEFINED = 1;
  NO = 2;
  ON_FAILURE = 3;
  ALWAYS = 4;
  UNLESS_STOPPED = 5;
}

enum DeploymentStrategy {
  UNKOWN_DEPLOYMENT_STRATEGY = 0;
  RECREATE = 1;
  ROLLING = 2;
}

enum VolumeType {
  UNKNOWN_VOLUME_TYPE = 0;
  RO = 1;
  RW = 2;
  RWX = 3;
  MEM = 4;
  TMP = 5;
}

enum DriverType {
  UNKNOWN_DRIVER_TYPE = 0;
  DRIVER_TYPE_NONE = 1;
  GCPLOGS = 2;
  LOCAL = 3;
  JSON_FILE = 4;
  SYSLOG = 5;
  JOURNALD = 6;
  GELF = 7;
  FLUENTD = 8;
  AWSLOGS = 9;
  SPLUNK = 10;
  ETWLOGS = 11;
  LOGENTRIES = 12;
}

enum ExposeStrategy {
  UNKNOWN_EXPOSE_STRATEGY = 0;
  NONE_ES = 1;
  EXPOSE = 2;
  EXPOSE_WITH_TLS = 3;
}

message Ingress {
  string name = 100;
  string host = 101;
  optional string uploadLimit = 102;
}

message ConfigContainer {
  string image = 100;
  string volume = 101;
  string path = 102;
  bool keepFiles = 103;
}

message HealthCheckConfig {
  optional int32 port = 100;
  optional string livenessProbe = 101;
  optional string readinessProbe = 102;
  optional string startupProbe = 103;
}

message Resource {
  optional string cpu = 100;
  optional string memory = 101;
}

message ResourceConfig {
  optional Resource limits = 100;
  optional Resource requests = 101;
}

message KeyValue {
  string key = 100;
  string value = 101;
}

message ListSecretsResponse {
  string prefix = 1;
  string name = 2;
  string publicKey = 3;
  bool hasKeys = 4;
  repeated string keys = 5;
}

message UniqueKey {
  string id = 100;
  string key = 101;
}
