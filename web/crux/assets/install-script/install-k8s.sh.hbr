#!/bin/sh
set -e

# migrating away from deployments because of the limited restartPolicy
kubectl delete -n dyrectorio deployment dyrectorio-k8s-agent || true

# restart command:
# kubectl get pod dyrectorio-k8s-agent -o yaml | kubectl replace --force -f -

cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Namespace
metadata:
  name: dyrectorio
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: crane-config
  namespace: dyrectorio
data:
  CRANE_IN_CLUSTER: "true"
  GRPC_TOKEN: "{{token}}"
  NAME: "{{name}}"
{{#if debugMode}}
  DEBUG: 'true'
{{/if}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dyrectorio-crane-create-read-only
  labels:
    rbac.dyrector.io/crane: "restricted-api-access"
rules:
-
  apiGroups:
  - ""
  resources:
  - namespaces
  - pvc
  verbs:
  - get
  - list
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dyrectorio-crane-rw
  labels:
    rbac.dyrector.io/crane: "restricted-api-access"
rules:
-
  apiGroups:
  - apps
  - ""
  - "monitoring.coreos.com"
  resources:
  - deployments
  - services
  - pods
  - ingress
  - secrets
  - servicemonitors
  - configmaps
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dyrectorio-crane
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.dyrector.io/crane: "restricted-api-access"
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dyrectorio-crane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dyrectorio-crane
subjects:
- kind: ServiceAccount
  name: default
  namespace: dyrectorio
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dyrectorio-crane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dyrectorio-crane
subjects:
- kind: ServiceAccount
  name: default
  namespace: dyrectorio
---
apiVersion: v1
kind: Pod
metadata:
  name: dyrectorio-k8s-agent
  namespace: dyrectorio
  labels:
    app: dyrectorio-k8s-agent
spec:
  initContainers:
  - name: crane-init
    image: ghcr.io/dyrector-io/dyrectorio/agent/crane:{{agentImageTag}}
    args:
      - init
    imagePullPolicy: Always
    resources:
      requests:
        memory: 128Mi
      limits:
        cpu: "1"
        memory: 256Mi
    envFrom:
      - configMapRef:
          name: crane-config
  containers:
  - name: crane
    image: ghcr.io/dyrector-io/dyrectorio/agent/crane:{{agentImageTag}}
    imagePullPolicy: Always
    resources:
      requests:
        memory: 128Mi
        cpu: 84m
      limits:
        cpu: "1"
        memory: 256Mi
    envFrom:
      - configMapRef:
          name: crane-config
      - secretRef:
          name: dyrectorio-secret
  restartPolicy: OnFailure
EOF
