version: '3.3'

services:
  crux-postgres:
    image: postgres:14.2-alpine
    container_name: crux-postgres
    environment:
      - REGISTRY=${REGISTRY}
      - IMAGE_NAME=${IMAGE_NAME}
      - CRUX_VERSION=${CRUX_VERSION}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=crux
      - POSTGRES_DB=crux
    restart: unless-stopped
    volumes:
      - crux-db:/var/lib/postgresql/data
    networks:
      - crux-intranet

  crux-migrate:
    container_name: crux-migrate
    depends_on:
      - crux-postgres
    image: ${REGISTRY}/${IMAGE_NAME}:${CRUX_IMAGE_TAG}
    build:
      context: ./
    platform: linux/amd64
    environment:
      - TZ=Europe/Budapest
      - DATABASE_URL=postgresql://crux:${POSTGRES_PASSWORD}@crux-postgres:5432/crux?schema=public
    command: migrate
    networks:
      - crux-intranet

  crux:
    container_name: crux
    depends_on:
      crux-migrate:
        condition: service_completed_successfully
    image: ${REGISTRY}/${IMAGE_NAME}:${CRUX_IMAGE_TAG}
    ports:
      - 5000:5000
      - 5001:5001
    environment:
      - TZ=Europe/Budapest
      - DATABASE_URL=postgresql://crux:${POSTGRES_PASSWORD}@crux-postgres:5432/crux?schema=public
      - CRUX_DOMAIN=$CRUX_DOMAIN
      - CRUX_DOMAIN_ALTS=$CRUX_DOMAIN_ALTS
      - SENDGRID_KEY=$SENDGRID_KEY
      - FROM_EMAIL=$FROM_EMAIL
      - FROM_NAME=$FROM_NAME
      - KRATOS_URL=$KRATOS_URL
      - CRUX_UI_URL=$CRUX_UI_URL
    volumes:
      - crux-certs:/app/certs
    restart: unless-stopped
    command: serve
    networks:
      - crux-intranet

volumes:
  crux-db:
  crux-certs:

networks:
  crux-intranet:
    name: crux-intranet
    external: true
