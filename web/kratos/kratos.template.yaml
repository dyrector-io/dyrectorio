version: v0.13.0
serve:
  public:
    base_url: ${KRATOS_URL}
  admin:
    base_url: ${KRATOS_ADMIN_URL}
selfservice:
  default_browser_return_url: ${CRUX_UI_URL}
  allowed_return_urls:
    - ${CRUX_UI_URL}
  methods:
    password:
      enabled: true
    oidc:
      enabled: false
      config:
        base_redirect_uri: ${KRATOS_URL}
        providers:
          - id: gitlab
            provider: gitlab
            mapper_url: "base64://${OIDC_GITLABHUB_SCHEMA_MAPPER}"
            auth_url: https://gitlab.com/oauth/authorize
            token_url: https://gitlab.com/oauth/token
            issuer_url: https://gitlab.com
            client_id: ""
            client_secret: ""
            scope:
              - read_user
              - openid
              - email
              - profile
          - id: github
            provider: github
            mapper_url: "base64://${OIDC_GITLABHUB_SCHEMA_MAPPER}"
            auth_url: https://github.com/login/oauth/authorize
            token_url: https://github.com/login/oauth/access_token
            issuer_url: https://github.com
            client_id: ""
            client_secret: ""
            scope:
              - read:user
              - user:email
          - id: google
            provider: google
            mapper_url: "base64://${OIDC_GOOGLE_SCHEMA_MAPPER}"
            auth_url: https://accounts.google.com/o/oauth2/v2/auth
            token_url: https://www.googleapis.com/oauth2/v4/token
            issuer_url: https://accounts.google.com
            client_id: ""
            client_secret: ""
            scope:
              - openid
              - email
              - profile
          - id: azure
            provider: microsoft
            mapper_url: "base64://${OIDC_AZURE_SCHEMA_MAPPER}"
            client_id: ""
            client_secret: ""
            microsoft_tenant: common
            subject_source: userinfo
            scope:
              - openid
              - email
              - profile
    code:
      enabled: true
  flows:
    error:
      ui_url: ${CRUX_UI_URL}/error
    settings:
      ui_url: ${CRUX_UI_URL}/auth/settings
      privileged_session_max_age: 5m
    recovery:
      enabled: true
      ui_url: ${CRUX_UI_URL}/auth/recovery
      use: code
    verification:
      enabled: true
      ui_url: ${CRUX_UI_URL}/auth/verify
      use: code
      after:
        default_browser_return_url: ${CRUX_UI_URL}
    logout:
      after:
        default_browser_return_url: ${CRUX_UI_URL}/auth/login
    login:
      ui_url: ${CRUX_UI_URL}/auth/login
      lifespan: 10m
      after:
        password:
          default_browser_return_url: ${CRUX_UI_URL}
          hooks:
            - hook: require_verified_address
        oidc:
          default_browser_return_url: ${CRUX_UI_URL}
          hooks:
            - hook: revoke_active_sessions
    registration:
      lifespan: 10m
      ui_url: ${CRUX_UI_URL}/auth/registration
      enable_legacy_one_step: true
      after:
        password:
          hooks:
            - hook: session
        oidc:
          default_browser_return_url: ${CRUX_UI_URL}
          hooks:
            - hook: session
hashers:
  argon2:
    parallelism: 1
    memory: 128MB
    iterations: 2
    salt_length: 16
    key_length: 16
identity:
  default_schema_id: default
  schemas:
    - id: default
      url: file:///etc/config/kratos/identity.schema.json
courier:
  smtp:
    from_name: ${FROM_NAME}
    from_address: ${FROM_EMAIL}
  template_override_path: /etc/config/kratos/templates
